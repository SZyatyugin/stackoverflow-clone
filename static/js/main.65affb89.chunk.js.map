{"version":3,"sources":["App-services/convert-date.js","App-services/App-questions-services.js","App-services/App-comments-services.js","App-services/App-answers-services.js","App-services/App-registration-services.js","App-services/App-users-services.js","App-services/App-tags-services.js","App-services/App-user-services.js","App-Services-Context/App-Services-Context.jsx","components/App-HOC/index.js","components/App-HOC/App-HOC-registration.js","App-store/reducers/token-reducer.js","App-store/reducers/answers-reducer.js","App-store/reducers/question-reducer.js","App-store/reducers/questions-reducer.js","App-store/reducers/filter-reducer.js","App-store/reducers/answers-comments-reducer.js","App-store/reducers/question-comments-reducer.js","App-store/reducers/users-reducer.js","App-store/reducers/tags-reducer.js","App-store/reducers/user-reducer.js","components/App-header/App-user-logged-in.jsx","components/App-header/App-user-logged-out.jsx","components/App-header/index.js","components/App-header/App-header.jsx","components/App-questions-list-items/index.js","components/App-questions-list-items/App-questions-list-items.jsx","components/App-loading-page/index.js","components/App-loading-page/App-loading-page.jsx","components/App-error-page/index.js","components/App-error-page/App-error-page.js","components/App-questions-list/index.js","components/App-questions-list/App-questions-list.jsx","components/App-comment/index.js","components/App-comment/App-comment.jsx","components/App-question-comments/index.js","components/App-question-comments/App-question-comments.jsx","components/App-question/index.js","components/App-question/App-question.jsx","components/App-answers-comments/index.js","components/App-answers-comments/App-answers-comments.jsx","components/App-answers/index.js","components/App-answers/App-answers.jsx","components/App-question-page/index.js","components/App-question-page/App-question-page.jsx","components/App-navigation/index.js","components/App-navigation/App-navigation.jsx","components/App-users-page/index.js","components/App-users-page/App-users-page.jsx","components/App-tags-page/index.js","components/App-tags-page/App-tags-page.jsx","components/App-user-page-info-details/index.js","components/App-user-page-info-details/App-user-page-info-details.jsx","components/App-user-page-tags-details/index.js","components/App-user-page-tags-details/App-user-page-tags-details.jsx","components/App-user-page-posts-details/index.js","components/App-user-page-posts-details/App-user-page-posts-details.jsx","components/App-user-page/index.js","components/App-user-page/App-user-page.jsx","components/App-page/index.js","components/App-page/App-page.jsx","components/App/index.js","components/App/App.jsx","App-store/index.js","App-store/store/store.js","index.js"],"names":["convertDate","value","date","Date","day","getDay","hours","getHours","minutes","getMinutes","getMonth","getFullYear","getAllQuestions","createAsyncThunk","a","filter","order","url","fetch","then","response","ok","Error","status","json","data","allQuestionsResponseTemplate","getQuestionById","console","log","question","items","find","elem","questionResponseTemplate","getQuestionsByTags","tagIdForSearch","getQuestionsBySearch","user_id","owner","question_id","body","owner_reputation","reputation","tags","view_count","user_profile_image","profile_image","user_profile_name","display_name","title","creation_date","last_activity_date","score","map","accepted_answer_id","answer_count","is_answered","owner_user_id","owner_accept_rate","accept_rate","owner_display_name","owner_profile_image","getCommentsForQuestionById","id","commentsResponseTemplate","getCommentsForAnswersById","comment_id","getAnswersById","sort","result","answerResponseTemplate","answer_id","is_accepted","AppRegistrationServices","qs","stringify","client_id","scope","redirect_uri","location","React","Component","finishRegistration","params","client_secret","code","proxyURL","method","headers","redirect","localStorage","setItem","catch","error","getAllUsers","activeFilter","usersTemplate","account_id","repuation_change_week","about_me","getAllTags","count","name","getUserById","user","templateForUser","getUserQuestionsById","getUserAnswersById","getUserPostsById","post_id","getUserTopTags","answer_score","question_count","question_score","tag_name","getMyAccount","token","badge_counts_bronze","badge_counts","bronze","badge_counts_silver","silver","badge_counts_gold","gold","last_access_date","createContext","AppRegistrationServicesProvider","Provider","AppRegistrationServicesConsumer","Consumer","AppLoginHOC","Wrap","appLoginServices","props","tokenReducer","createSlice","initialState","expires","loading","currentUserAccount","reducers","getToken","state","parse","getItem","access_token","LogOut","removeItem","extraReducers","pending","fulfilled","action","payload","rejected","actions","answersReducer","questionsFetchError","questionsFetchStatus","answersById","answersFilters","answersActiveFilter","setAnswersActiveFilter","questionReducer","questionsReducer","allQuestions","filterReducer","filters","setFilter","setOrder","answersCommentsReducer","comments","reducer","questionCommentsReducer","usersReducer","users","tagsLoading","setUsersPageFilter","setUsersPageOrder","tagsReducer","tagsPageFilters","setTagPageFilter","userReducer","posts","sortList","sortListItem","setSortListItem","history","useHistory","dispatch","useDispatch","useSelector","shallowEqual","useEffect","className","to","src","onClick","push","search","getCodeForLogin","AppHeader","connect","isLoggedIn","useState","inputValue","setInputValue","userCheckLogin","onSubmit","e","preventDefault","type","placeholder","onChange","target","AppQuestionsListItems","createQuestionWrapper","store","answerSelector","index","AppLoadingPage","AppErrorPage","AppQuestionsList","withRouter","match","dataForRequest","useMemo","loadingHandler","errorHandler","content","filterClass","AppComment","AppQuestionComments","AppQuestion","dangerouslySetInnerHTML","__html","AppAnswersComments","AppAnswers","answersList","answers","acceptedAnswer","length","AppQuestionPage","useRouteMatch","AppNavigation","AppUsersPage","getInputValue","toLowerCase","indexOf","hasData","usersItem","AppTagsPage","tagsData","dataTags","AppUserPageInfoDetails","AppUserPageTagsDetails","AppUserPagePostsDetails","elemClass","AppUserPage","AppPage","exact","path","component","App","configureStore","ReactDOM","render","document","getElementById"],"mappings":"6UA2BeA,EA3BG,SAACC,GACf,IAAIC,EAAO,IAAIC,KAAa,IAARF,GAehBG,EAAMF,EAAKG,SAAW,GAAhB,WAAyBH,EAAKG,UAA9B,UAA8CH,EAAKG,UACzDC,EACAJ,EAAKK,WAAa,GAAlB,WAA2BL,EAAKK,YAAhC,UAAkDL,EAAKK,YACvDC,EACAN,EAAKO,aAAe,GAApB,WACUP,EAAKO,cADf,UAESP,EAAKO,cAClB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,YAA8BJ,EAA9B,YArBa,CACT,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAUOF,EAAKQ,YADhB,YAEIR,EAAKS,gBCvBTC,EAAkBC,YAClB,mCADkC,uCAElC,WAAOZ,GAAP,mBAAAa,EAAA,6DACUC,EAAkBd,EAAlBc,OAAQC,EAAUf,EAAVe,MACVC,EAFR,4DAEmED,EAFnE,iBAEiFD,EAFjF,kDAGiBG,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOC,EAA6BD,MAbhD,mFAFkC,uDAmBlCE,EAAkBd,YAClB,kCADkC,uCAElC,WAAOZ,GAAP,eAAAa,EAAA,6DACIc,QAAQC,IAAI,mBACRZ,EAFR,sDAE6DhB,EAF7D,2EAGiBiB,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,IAAIK,EAAWL,EAAKM,MAAMC,MAAK,SAACC,GAAD,OAAUA,KACzC,OAAOC,EAAyBJ,MAd5C,mFAFkC,uDAoBlCK,EAAqBtB,YACrB,sCADqC,uCAErC,WAAOZ,GAAP,qBAAAa,EAAA,6DACUC,EAAkCd,EAAlCc,OAAQC,EAA0Bf,EAA1Be,MAAOoB,EAAmBnC,EAAnBmC,eACjBnB,EAFR,kEAEyED,EAFzE,iBAEuFD,EAFvF,mBAEwGqB,EAFxG,gCAGiBlB,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOC,EAA6BD,MAbhD,mFAFqC,uDAmBrCY,EAAuBxB,YACvB,wCADuC,uCAEvC,WAAOZ,GAAP,eAAAa,EAAA,6DACQG,EADR,oFAC2FhB,EAD3F,yCAEWiB,MAAMD,GACRE,MAAK,SAACC,GACH,OAAOA,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOC,EAA6BD,OAPhD,2CAFuC,uDAavCS,EAA2B,SAACT,GAC5B,MAAO,CACHa,QAASb,EAAKc,MAAMD,QACpBE,YAAaf,EAAKe,YAClBC,KAAMhB,EAAKgB,KACXC,iBAAkBjB,EAAKc,MAAMI,WAC7BC,KAAMnB,EAAKmB,KACXC,WAAYpB,EAAKoB,WACjBC,mBAAoBrB,EAAKc,MAAMQ,cAC/BC,kBAAmBvB,EAAKc,MAAMU,aAC9BC,MAAOzB,EAAKyB,MACZC,cAAenD,EAAYyB,EAAK0B,eAChCC,mBAAoBpD,EAAYyB,EAAK2B,oBACrCC,MAAO5B,EAAK4B,QAGhB3B,EAA+B,SAACD,GAChC,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,MAAO,CACHiB,MAAOjB,EAAKiB,MACZL,WAAYZ,EAAKY,WACjBU,mBAAoBtB,EAAKsB,mBACnBtB,EAAKsB,mBACL,KACNC,aAAcvB,EAAKuB,aACnBL,cAAenD,EAAYiC,EAAKkB,eAChCM,YAAaxB,EAAKwB,YAClBL,mBAAoBpD,EAAYiC,EAAKmB,oBACrCZ,YAAaP,EAAKO,YAClBa,MAAOpB,EAAKoB,MACZT,KAAMX,EAAKW,KACXH,KAAMR,EAAKQ,KACXiB,cAAezB,EAAKM,MAAMD,QAC1BI,iBAAkBT,EAAKM,MAAMI,WAC7BgB,kBAAmB1B,EAAKM,MAAMqB,YACxB3B,EAAKM,MAAMqB,YACX,KACNC,mBAAoB5B,EAAKM,MAAMU,aAC/Ba,oBAAqB7B,EAAKM,MAAMQ,mBC7GxCgB,EAA6BlD,YAC7B,qDAD6C,uCAE7C,WAAOmD,GAAP,eAAAlD,EAAA,6DACQG,EADR,sDAC6D+C,EAD7D,mFAEiB9C,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,OAAOgC,EAAyBhC,SAbhD,mFAF6C,uDAoB7CiC,EAA4BrD,YAC5B,mDAD4C,uCAE5C,WAAOmD,GAAP,eAAAlD,EAAA,6DACQG,EADR,oDAC2D+C,EAD3D,oFAEiB9C,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,OAAOgC,EAAyBhC,SAbhD,mFAF4C,uDAoB5CgC,EAA2B,SAACxC,GAC5B,MAAO,CACHgB,KAAMhB,EAAKgB,KACX0B,WAAY1C,EAAK0C,WACjBhB,cAAenD,EAAYyB,EAAK0B,eAChCU,mBAAoBpC,EAAKc,MAAMU,aAC/BP,iBAAkBjB,EAAKkB,WACvBL,QAASb,EAAKc,MAAMD,UC/CtB8B,EAAiBvD,YACnB,gCADmC,uCAEnC,WAAOY,GAAP,qBAAAX,EAAA,2EACqBW,EADrB,GACSuC,EADT,KACaK,EADb,KAEQpD,EAFR,sDAE6D+C,EAF7D,oCAE2FK,EAF3F,kDAGiBnD,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACmD,GACH,OAAOA,EAAOvC,MAAMuB,KAAI,SAACrB,GACrB,OAAOsC,EAAuBtC,SAd9C,mFAFmC,uDAqBnCsC,EAAyB,SAAC9C,GAC1B,MAAO,CACHa,QAASb,EAAKc,MAAMD,QACpBkC,UAAW/C,EAAK+C,UAChB/B,KAAMhB,EAAKgB,KACXgC,YAAahD,EAAKgD,YAClB/B,iBAAkBjB,EAAKc,MAAMI,WAC7BG,mBAAoBrB,EAAKc,MAAMQ,cAC/BC,kBAAmBvB,EAAKc,MAAMU,aAC9BE,cAAenD,EAAYyB,EAAK0B,eAChCC,mBAAoBpD,EAAYyB,EAAK2B,oBACrCC,MAAO5B,EAAK4B,Q,iDC/BCqB,E,gLAEb,IAMIzD,EAAG,UANU,qCAMV,OAAiB0D,IAAGC,UALd,CACTC,UAAW,MACXC,MAAO,eACPC,aAAc,uDAGlBC,SAAW/D,M,GATkCgE,IAAMC,WAYvDC,EAAqBtE,YACrB,kCADqC,uCAErC,WAAOY,GAAP,eAAAX,EAAA,4DACqB,uCACE,oDACfsE,EAAS,CACTP,UAAW,MACXQ,cAAe,2BACfC,KAAM7D,EACNsD,aAAc,qDAPtB,SASiB7D,MAAMqE,wFAAuB,CACtCC,OAAQ,OACRC,QAAS,CACL,mBAAoB,iBACpB,8BAA+B,IAC/B,eAAgB,qCAEpBC,SAAU,SACVjD,KAAMkC,IAAGC,UAAUQ,KAElBjE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GAEH,OADAkE,aAAaC,QAAQ,QAASnE,GACvBA,KAEVoE,OAAM,SAACC,GACJ,OAAOA,KAhCnB,mFAFqC,uDCdnCC,EAAclF,YAChB,2BADgC,uCAEhC,WAAOY,GAAP,qBAAAX,EAAA,2EACgCW,EADhC,GACST,EADT,KACgBgF,EADhB,KAEQ/E,EAFR,wDAE+DD,EAF/D,iBAE6EgF,EAF7E,kDAGiB9E,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACmD,GACH,OAAOA,EAAOvC,MAAMuB,KAAI,SAACrB,GACrB,OAAOgE,EAAchE,SAdrC,mFAFgC,uDAsBhCgE,EAAgB,SAACxE,GACjB,MAAO,CACHuD,SAAUvD,EAAKuD,SACfkB,WAAYzE,EAAKyE,WACjB5D,QAASb,EAAKa,QACdK,WAAYlB,EAAKkB,WACjBwD,sBAAuB1E,EAAK0E,sBAC5BpD,cAAetB,EAAKsB,cACpBE,aAAcxB,EAAKwB,aACnBmD,SAAU3E,EAAK2E,WC9BnBC,EAAaxF,YAAiB,yBAAD,uCAA2B,WAAOwD,GAAP,eAAAvD,EAAA,6DACpDG,EADoD,iEACYoD,EADZ,gCAE3CnD,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,MAAO,CACHqE,MAAOrE,EAAKqE,MACZC,KAAMtE,EAAKsE,YAf6B,mFAA3B,uDCA7BC,EAAc3F,YAAiB,0BAAD,uCAA4B,WAAOmD,GAAP,eAAAlD,EAAA,6DACtDG,EADsD,kDACL+C,EADK,gFAE7C9C,MAAMD,GACdE,MAAK,SAACC,GACH,OAAOA,EAASI,UAEnBL,MAAK,SAACM,GACH,IAAIgF,EAAOhF,EAAKM,MAAMC,MAAK,SAACC,GACxB,OAAOA,KAEX,OAAOyE,EAAgBD,MAV2B,mFAA5B,uDAa9BE,EAAuB9F,YACvB,mCADuC,uCAEvC,WAAOY,GAAP,mBAAAX,EAAA,6DACUkD,EAAqBvC,EAArBuC,GAAIgC,EAAiBvE,EAAjBuE,aACN/E,EAFR,kDAEyD+C,EAFzD,iDAEoGgC,EAFpG,gCAGiB9E,MAAMD,GACdE,MAAK,SAACC,GACH,OAAOA,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,MAAO,CACHwB,YAAaxB,EAAKwB,YAClBJ,MAAOpB,EAAKoB,MACZH,MAAOjB,EAAKiB,MACZV,YAAaP,EAAKO,mBAbtC,mFAFuC,uDAqBvCoE,EAAqB/F,YACrB,iCADqC,uCAErC,WAAOY,GAAP,mBAAAX,EAAA,6DACUkD,EAAqBvC,EAArBuC,GAAIgC,EAAiBvE,EAAjBuE,aACN/E,EAFR,kDAEyD+C,EAFzD,+CAEkGgC,EAFlG,kDAGiB9E,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,MAAO,CACHwB,YAAaxB,EAAKwB,YAClBJ,MAAOpB,EAAKoB,MACZH,MAAOjB,EAAKiB,MACZV,YAAaP,EAAKO,mBAlBtC,mFAFqC,uDA0BrCqE,EAAmBhG,YACnB,+BADmC,uCAEnC,WAAOY,GAAP,mBAAAX,EAAA,6DACUkD,EAAqBvC,EAArBuC,GAAIgC,EAAiBvE,EAAjBuE,aACN/E,EAFR,kDAEyD+C,EAFzD,6CAEgGgC,EAFhG,kDAGiB9E,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,MAAO,CACHK,QAASL,EAAKK,QACdwE,QAAS7E,EAAK6E,QACdzD,MAAOpB,EAAKoB,MACZH,MAAOjB,EAAKiB,MACZE,mBAAoBpD,EAChBiC,EAAKmB,2BApB7B,mFAFmC,uDA6BnC2D,EAAiBlG,YACjB,6BADiC,uCAEjC,WAAOmD,GAAP,eAAAlD,EAAA,6DACQG,EADR,kDACyD+C,EADzD,sEAEiB9C,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,OAAOA,EAAKM,MAAMuB,KAAI,SAACrB,GACnB,MAAO,CACHK,QAASL,EAAKK,QACdkB,aAAcvB,EAAKuB,aACnBwD,aAAc/E,EAAK+E,aACnBC,eAAgBhF,EAAKgF,eACrBC,eAAgBjF,EAAKiF,eACrBC,SAAUlF,EAAKkF,gBAnBnC,mFAFiC,uDA2BjCC,EAAevG,YACf,4BAD+B,uCAE/B,WAAOwG,GAAP,eAAAvG,EAAA,6DACQG,EADR,4JACmKoG,GADnK,SAEiBnG,MAAMD,GACdE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAJ,qDAC4CF,EAASG,OADrD,yBAIV,OAAOH,EAASI,UAEnBL,MAAK,SAACM,GACH,IAAIgF,EAAOhF,EAAKM,MAAMC,MAAK,SAACC,GACxB,OAAOA,KAEX,OAAOyE,EAAgBD,MAE1BZ,OAAM,SAACC,GACJ,OAAOA,KAlBnB,mFAF+B,uDAwB/BY,EAAkB,SAACjF,GACnB,MAAO,CACH6F,oBAAqB7F,EAAK8F,aAAaC,OACvCC,oBAAqBhG,EAAK8F,aAAaG,OACvCC,kBAAmBlG,EAAK8F,aAAaK,KACrC/E,WAAYpB,EAAKoB,WACjBW,aAAc/B,EAAK+B,aACnByD,eAAgBxF,EAAKwF,eACrBf,WAAYzE,EAAKyE,WACjB5D,QAASb,EAAKa,QACdK,WAAYlB,EAAKkB,WACjBQ,cAAenD,EAAYyB,EAAK0B,eAChC0E,iBAAkB7H,EAAYyB,EAAKoG,kBACnCzB,SAAU3E,EAAK2E,SACfpB,SAAUvD,EAAKuD,SACfjC,cAAetB,EAAKsB,cACpBE,aAAcxB,EAAKwB,e,oBCzJvBgC,IAAM6C,gBAFIC,G,GAAVC,SACUC,G,GAAVC,SCHWC,GCEK,SAACC,GACjB,8KACc,IAAD,OACL,OACI,cAACH,GAAD,UACK,SAACI,GACE,OACI,cAACD,EAAD,6BACQ,EAAKE,OADb,IAEID,iBAAkBA,YAR9C,GAAyBpD,IAAMC,Y,QCD/BqD,GAAeC,YAAY,CAC3BjC,KAAM,eACNkC,aAAc,CACV5D,UAAW,MACXwC,MAAO,KACPqB,QAAS,KACTC,QAAS,OACT7C,MAAO,KACP8C,mBAAoB,IAExBC,SAAU,CACNC,SAAU,SAACC,GACP,IAAItH,EAAOkD,IAAGqE,MAAMrD,aAAasD,QAAQ,UACzCF,EAAM1B,MAAgB5F,EAAKyH,aAC3BH,EAAML,QAAkBjH,EAAKiH,SAEjCS,OAAQ,SAACJ,GACLpD,aAAayD,WAAW,SACxBL,EAAM1B,MAAQ,KACd0B,EAAML,QAAU,OAGxBW,eAAa,oBACRlE,EAAmBmE,SAAU,SAACP,GAC3BA,EAAMJ,QAAU,aAFX,eAIRvB,EAAakC,SAAU,SAACP,GACrBA,EAAMJ,QAAU,aALX,eAORxD,EAAmBoE,WAAY,SAACR,EAAOS,GACpC7D,aAAaC,QAAQ,QAASjB,IAAGC,UAAU4E,EAAOC,UAClDV,EAAM1B,MAAQmC,EAAOC,QAAQP,aAC7BH,EAAML,QAAUc,EAAOC,QAAQf,QAC/BK,EAAMJ,QAAU,eAXX,eAaRvB,EAAamC,WAAY,SAACR,EAAOS,GAC9BT,EAAMJ,QAAU,YAChBI,EAAMH,mBAAqBY,EAAOC,WAf7B,eAiBRtE,EAAmBuE,UAAW,SAACX,EAAOS,GACnCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAnBhB,eAqBRrC,EAAasC,UAAW,SAACX,EAAOS,GAC7BT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAvBhB,K,GA2BmBlB,GAAaoB,QAAlCb,G,GAAAA,SAAUK,G,GAAAA,OACVZ,MAAf,QClDMqB,GAAiBpB,YAAY,CAC/BjC,KAAM,iBACNkC,aAAc,CACVoB,oBAAqB,KACrBC,qBAAsB,OACtBC,YAAa,GACbC,eAAgB,CAAC,WAAY,WAAY,SACzCC,oBAAqB,YAEzBpB,SAAU,CACNqB,uBAAwB,SAACnB,EAAOS,GAC5BT,EAAMkB,oBAAsBT,EAAOC,UAG3CJ,eAAa,oBACRjF,EAAekF,SAAU,SAACP,GACvBA,EAAMJ,QAAU,aAFX,eAIRvE,EAAemF,WAAY,SAACR,EAAOS,GAChCT,EAAMJ,QAAU,YAChBI,EAAMgB,YAAcP,EAAOC,WANtB,eAQRrF,EAAesF,UAAW,SAACX,EAAOS,GAC/BT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,KAcFS,GAA2BN,GAAeD,QAA1CO,uBACAN,MAAf,QCReO,GAtBS3B,YAAY,CAChCjC,KAAM,kBACNkC,aAAc,CACV3C,MAAO,KACP6C,QAAS,OACT7G,SAAU,IAEd+G,SAAU,GACVQ,eAAa,oBACR1H,EAAgB2H,SAAU,SAACP,GACxBA,EAAMJ,QAAU,aAFX,eAIRhH,EAAgB4H,WAAY,SAACR,EAAOS,GACjCT,EAAMJ,QAAU,YAChBI,EAAMjH,SAAW0H,EAAOC,WANnB,eAQR9H,EAAgB+H,UAAW,SAACX,EAAOS,GAChCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,KAcjB,QC0BeW,GA5CU5B,YAAY,CACjCjC,KAAM,mBACNkC,aAAc,CACV3C,MAAO,KACP6C,QAAS,OACT0B,aAAc,IAElBxB,SAAU,GACVQ,eAAa,oBACRzI,EAAgB0I,SAAU,SAACP,GACxBA,EAAMJ,QAAU,aAFX,eAIR/H,EAAgB2I,WAAY,SAACR,EAAOS,GACjCT,EAAMJ,QAAU,YAChBI,EAAMsB,aAAeb,EAAOC,WANvB,eAQR7I,EAAgB8I,UAAW,SAACX,EAAOS,GAChCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,eAYRtH,EAAmBmH,SAAU,SAACP,GAC3BA,EAAMJ,QAAU,aAbX,eAeRxG,EAAmBoH,WAAY,SAACR,EAAOS,GACpCT,EAAMJ,QAAU,YAChBI,EAAMsB,aAAeb,EAAOC,WAjBvB,eAmBRtH,EAAmBuH,UAAW,SAACX,EAAOS,GACnCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WArBhB,eAuBRpH,EAAqBiH,SAAU,SAACP,GAC7BA,EAAMJ,QAAU,aAxBX,eA0BRtG,EAAqBkH,WAAY,SAACR,EAAOS,GACtCT,EAAMJ,QAAU,YAChBI,EAAMsB,aAAeb,EAAOC,WA5BvB,eA8BRpH,EAAqBqH,UAAW,SAACX,EAAOS,GACrCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAhChB,KAoCjB,QChDMa,GAAgB9B,YAAY,CAC9BjC,KAAM,gBACNkC,aAAc,CACV8B,QAAS,CAAC,MAAO,WAAY,QAAS,WAAY,OAAQ,SAC1DvE,aAAc,WACdhF,MAAO,QAEX6H,SAAU,CACN2B,UAAW,SAACzB,EAAOS,GACfT,EAAM/C,aAAewD,EAAOC,SAEhCgB,SAAU,SAAC1B,EAAOS,GACdT,EAAM/H,MAAQwI,EAAOC,Y,GAIMa,GAAcX,QAAtCa,G,GAAAA,UAAWC,G,GAAAA,SACXH,MAAf,QCMeI,GAvBgBlC,YAAY,CACvCjC,KAAM,yBACNkC,aAAc,CACV3C,MAAO,KACP6C,QAAS,OACTgC,SAAU,IAEdC,QAAS,GACTvB,eAAa,oBACRnF,EAA0BoF,SAAU,SAACP,GAClCA,EAAMJ,QAAU,aAFX,eAIRzE,EAA0BqF,WAAY,SAACR,EAAOS,GAC3CT,EAAMJ,QAAU,YAChBI,EAAM4B,SAAWnB,EAAOC,WANnB,eAQRvF,EAA0BwF,UAAW,SAACX,EAAOS,GAC1CT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,KAejB,QCAeoB,GAvBiBrC,YAAY,CACxCjC,KAAM,0BACNkC,aAAc,CACV3C,MAAO,KACP6C,QAAS,OACTgC,SAAU,IAEdC,QAAS,GACTvB,eAAa,oBACRtF,EAA2BuF,SAAU,SAACP,GACnCA,EAAMJ,QAAU,aAFX,eAIR5E,EAA2BwF,WAAY,SAACR,EAAOS,GAC5CT,EAAMJ,QAAU,YAChBI,EAAM4B,SAAWnB,EAAOC,WANnB,eAQR1F,EAA2B2F,UAAW,SAACX,EAAOS,GAC3CT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,KAejB,QCvBMqB,GAAetC,YAAY,CAC7BjC,KAAM,eACNkC,aAAc,CACV3C,MAAO,KACP6C,QAAS,OACToC,MAAO,GACPR,QAAS,CAAC,aAAc,WAAY,OAAQ,YAC5CvE,aAAc,aACdhF,MAAO,OACPgK,YAAa,QAEjBnC,SAAU,CACNoC,mBAAoB,SAAClC,EAAOS,GACxBT,EAAM/C,aAAewD,EAAOC,SAEhCyB,kBAAmB,SAACnC,EAAOS,GACvBT,EAAM/H,MAAQwI,EAAOC,UAG7BJ,eAAa,oBACRtD,EAAYuD,SAAU,SAACP,GACpBA,EAAMJ,QAAU,aAFX,eAIR5C,EAAYwD,WAAY,SAACR,EAAOS,GAC7BT,EAAMJ,QAAU,YAChBI,EAAMgC,MAAQvB,EAAOC,WANhB,eAQR1D,EAAY2D,UAAW,SAACX,EAAOS,GAC5BT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,K,GAcwCqB,GAAanB,QAAvDsB,G,GAAAA,mBAAoBC,G,GAAAA,kBACpBJ,MAAf,QClCMK,GAAc3C,YAAY,CAC5BjC,KAAM,cACNkC,aAAc,CACV3C,MAAO,KACP6C,QAAS,OACT/F,KAAM,GACNwI,gBAAiB,CAAC,UAAW,OAAQ,YACrCpF,aAAc,WAElB6C,SAAU,CACNwC,iBAAkB,SAACtC,EAAOS,GACtBT,EAAM/C,aAAewD,EAAOC,UAGpCJ,eAAa,oBACRhD,EAAWiD,SAAU,SAACP,GACnBA,EAAMJ,QAAU,aAFX,eAIRtC,EAAWkD,WAAY,SAACR,EAAOS,GAC5BT,EAAMJ,QAAU,YAChBI,EAAMnG,KAAO4G,EAAOC,WANf,eAQRpD,EAAWqD,UAAW,SAACX,EAAOS,GAC3BT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAVhB,KAcF4B,GAAqBF,GAAYxB,QAAjC0B,iBACAF,MAAf,QCvBMG,GAAc9C,YAAY,CAC5BjC,KAAM,cACNkC,aAAc,CACVE,QAAS,OACT7C,MAAO,KACPW,KAAM,GACN8E,MAAO,GACP3I,KAAM,GACNoD,aAAc,QACduE,QAAS,CAAC,QAAS,YACnBiB,SAAU,CAAC,MAAO,YAAa,WAC/BC,aAAc,OAElB5C,SAAU,CACN2B,UAAW,SAACzB,EAAOY,GACfZ,EAAM/C,aAAe2D,EAAQF,SAEjCiC,gBAAiB,SAAC3C,EAAOS,GACrBT,EAAM0C,aAAejC,EAAOC,UAGpCJ,eAAa,oBACR7C,EAAY8C,SAAU,SAACP,GACpBA,EAAMJ,QAAU,aAFX,eAIR9B,EAAiByC,SAAU,SAACP,GACzBA,EAAMJ,QAAU,aALX,eAORhC,EAAqB2C,SAAU,SAACP,GAC7BA,EAAMJ,QAAU,aARX,eAUR/B,EAAmB0C,SAAU,SAACP,GAC3BA,EAAMJ,QAAU,aAXX,eAaR5B,EAAeuC,SAAU,SAACP,GACvBA,EAAMJ,QAAU,aAdX,eAgBRnC,EAAY+C,WAAY,SAACR,EAAOS,GAC7BT,EAAMJ,QAAU,YAChBI,EAAMtC,KAAO+C,EAAOC,WAlBf,eAoBR5C,EAAiB0C,WAAY,SAACR,EAAOS,GAClCT,EAAMJ,QAAU,YAChBI,EAAMwC,MAAQ/B,EAAOC,WAtBhB,eAwBR9C,EAAqB4C,WAAY,SAACR,EAAOS,GACtCT,EAAMJ,QAAU,YAChBI,EAAMwC,MAAQ/B,EAAOC,WA1BhB,eA4BR7C,EAAmB2C,WAAY,SAACR,EAAOS,GACpCT,EAAMJ,QAAU,YAChBI,EAAMwC,MAAQ/B,EAAOC,WA9BhB,eAgCR1C,EAAewC,WAAY,SAACR,EAAOS,GAChCT,EAAMJ,QAAU,YAChBI,EAAMnG,KAAO4G,EAAOC,WAlCf,eAqCRjD,EAAYkD,UAAW,SAACX,EAAOS,GAC5BT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAvChB,eAyCR5C,EAAiB6C,UAAW,SAACX,EAAOS,GACjCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WA3ChB,eA6CR9C,EAAqB+C,UAAW,SAACX,EAAOS,GACrCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WA/ChB,eAiDR7C,EAAmB8C,UAAW,SAACX,EAAOS,GACnCT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAnDhB,eAqDR1C,EAAe2C,UAAW,SAACX,EAAOS,GAC/BT,EAAMJ,QAAU,SAChBI,EAAMjD,MAAQ0D,EAAOC,WAvDhB,K,GA4D6B6B,GAAY3B,QAA3Ca,G,GAAAA,UAAWkB,G,GAAAA,gBACXJ,MAAf,QC1CenD,OAxCS,WACpB,IAAIwD,EAAUC,eACVC,EAAWC,cACXrK,EAAOsK,aAAY,SAAChD,GAAW,IAAD,EAG1BA,EADAR,aAAgBlB,EAFU,EAEVA,MAEpB,MAAO,CAAEuB,mBAJqB,EAEHA,mBAEEvB,WAC9B2E,KACGpD,EAA8BnH,EAA9BmH,mBAAoBvB,EAAU5F,EAAV4F,MAI1B,OAHA4E,qBAAU,WACNJ,EAASzE,EAAaC,MACvB,CAACA,IAEA,sBAAK6E,UAAU,mBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,gBAAWvD,EAAmBtG,SAAtC,SACI,qBAAK8J,IAAKxD,EAAmB7F,oBAGrC,qBAAKmJ,UAAU,4BAAf,SACI,cAAC,IAAD,CAAMC,GAAE,gBAAWvD,EAAmBtG,SAAtC,SACKsG,EAAmB3F,iBAG5B,qBAAKiJ,UAAU,oBAAf,SACI,wBACIA,UAAU,MACVG,QAAS,WACLR,EAAS1C,MACTwC,EAAQW,KAAK,MAJrB,SAOI,sBAAMJ,UAAU,sBAAhB,+BCJL/D,OA5BU,SAACG,GACtB,IAAIqD,EAAUC,eACVC,EAAWC,cACTzD,EAAqBC,EAArBD,iBASN,OARA4D,qBAAU,WACN,IACIxK,EADOkD,IAAGqE,MAAMhE,SAASuH,QACb,SACZ9K,IACAoK,EAAS1G,EAAmB1D,IAC5BkK,EAAQW,KAAK,QAElB,IAEC,qBAAKJ,UAAU,oBAAf,SACI,wBACIA,UAAU,MACVG,QAAS,WACLhE,EAAiBmE,mBAHzB,SAMI,sBAAMN,UAAU,sBAAhB,0BC5BDO,GCgEAtE,GAAYuE,aALH,SAAC3D,GACrB,MAAO,CACH4D,aAAc5D,EAAMR,aAAalB,SAGdqF,EAvDT,SAACpE,GAAW,IACpBqE,EAAerE,EAAfqE,WADmB,EAESC,mBAAS,IAFlB,mBAEpBC,EAFoB,KAERC,EAFQ,KAGrBjB,EAAWC,cACfG,qBAAU,WACNJ,EAAS/C,QACV,IACH,IAAIiE,EAAiBJ,EACjB,cAAC,GAAD,IAEA,cAAC,GAAD,IAEJ,OACI,qBAAKT,UAAU,aAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,eAAC,IAAD,CAAMC,GAAG,IAAT,UACK,IACD,yDAIR,qBAAKD,UAAU,qBAAf,SACI,sBACIc,SAAU,SAACC,GACPA,EAAEC,iBACFrB,EAASxJ,EAAqBwK,IAC9BC,EAAc,KAJtB,SAOI,uBACIK,KAAK,SACLC,YAAY,mBACZnN,MAAO4M,EACPQ,SAAU,SAACJ,GACPH,EAAcG,EAAEK,OAAOrN,cAKvC,qBAAKiM,UAAU,2BAAf,SACKa,eCnDVQ,GCGe,WAC1B,IAGIC,EAHezB,aAAY,SAAC0B,GAC5B,OAAOA,EAAMrD,iBAAiBC,eAC/B2B,KACsC1I,KAAI,SAACrB,GAC1C,IAAIyL,EAAiB,4BAOrB,OANIzL,EAAKuB,aAAe,IACpBkK,GAAkB,WAElBzL,EAAKwB,cACLiK,GAAkB,aAGlB,oBAA2BxB,UAAU,uBAArC,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,cAAC,IAAD,CAAMC,GAAE,qBAAgBlK,EAAKO,aAA7B,SACI,sBAAK0J,UAAU,4BAAf,UACI,qBAAKA,UAAU,cAAf,SAA8BjK,EAAKoB,QACnC,qBAAK6I,UAAU,cAAf,wBAGR,cAAC,IAAD,CAAMC,GAAE,qBAAgBlK,EAAKO,aAA7B,SACI,sBAAK0J,UAAWwB,EAAhB,UACI,qBAAKxB,UAAU,gBAAf,SACKjK,EAAKuB,eAEV,qBAAK0I,UAAU,gBAAf,0BAGR,cAAC,IAAD,CAAMC,GAAE,qBAAgBlK,EAAKO,aAA7B,SACI,sBAAK0J,UAAU,4BAAf,UACI,qBAAKA,UAAU,cAAf,SACKjK,EAAKY,aAEV,qBAAKqJ,UAAU,cAAf,2BAIZ,sBAAKA,UAAU,yBAAf,UACI,cAAC,IAAD,CAAMC,GAAE,qBAAgBlK,EAAKO,aAA7B,SACI,qBAAK0J,UAAU,yBAAf,SACKjK,EAAKiB,UAGd,sBAAKgJ,UAAU,sBAAf,UACI,qBAAKA,UAAU,sBAAf,SACKjK,EAAKW,KAAKU,KAAI,SAACrB,EAAM0L,GAClB,OACI,qBAAiBzB,UAAU,WAA3B,SACI,cAAC,IAAD,CAAMC,GAAE,yBAAoBlK,GAA5B,SACKA,KAFC0L,QAQtB,sBAAKzB,UAAU,sBAAf,UACI,uBAAMA,UAAU,iBAAhB,mBACWjK,EAAKkB,iBAEhB,cAAC,IAAD,CAAMgJ,GAAE,gBAAWlK,EAAKyB,eAAxB,SACI,sBAAMwI,UAAU,iBAAhB,SACKjK,EAAK4B,uBAGd,sBAAMqI,UAAU,4BAAhB,SACKjK,EAAKS,gCAtDrBT,EAAKO,gBAgEtB,OAAO,oBAAI0J,UAAU,iBAAd,SAAgCsB,KChF5BI,I,MCCQ,WACnB,OACI,qBAAK1B,UAAU,cAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,iCCjBL2B,I,MCCM,WACjB,OACI,sBAAK3B,UAAU,YAAf,UACI,qBAAKA,UAAU,mBACf,oBAAIA,UAAU,yBAAd,+CCLG4B,GCiGAC,cAxFU,SAAC,GAAe,IAAD,EAChC3L,EAAc,UADkB,EAAZ4L,MACG5I,cAAT,aAAG,EAAcpB,GAC/BvC,EAAOsK,aAAY,SAAChD,GAAW,IAAD,EAI1BA,EAFAuB,cAAiBtE,EAFS,EAETA,aAAchF,EAFL,EAEKA,MAGnC,MAAO,CACHuJ,QAN0B,EAEYA,QAKtCxJ,OAAQiF,EACRhF,MAAOA,EACP2H,QALAI,EADAqB,iBAAoBzB,WAQzBqD,KACGjL,EAAoCU,EAApCV,OAAQC,EAA4BS,EAA5BT,MAAOuJ,EAAqB9I,EAArB8I,QAAS5B,EAAYlH,EAAZkH,QAC1BsF,EAAiBC,mBACjB,iBAAO,CACHnN,SACAC,QACAoB,oBAEJ,CAACrB,EAAQC,EAAOoB,IAEhByJ,EAAWC,cACfG,qBAAU,WAEFJ,EADAzJ,EACSD,EAAmB8L,GAEnBrN,EAAgBqN,MAE9B,CAACA,IACJ,IAAIE,EAA6B,YAAZxF,EAAwB,cAAC,GAAD,IAAqB,KAC9DyF,EAA2B,WAAZzF,EAAuB,cAAC,GAAD,IAAmB,KAEzD0F,IADYF,GAAkBC,GACV,cAAC,GAAD,IAA4B,KAEpD,OACI,sBAAKlC,UAAU,sCAAf,UACI,qBAAKA,UAAU,+BAAf,2BACA,qBAAKA,UAAU,iCAAf,SACI,qBAAIA,UAAU,mBAAd,UACK3B,EAAQjH,KAAI,SAACrB,EAAM0L,GAChB,IAAIW,EACArM,IAASlB,EACH,sBACA,eACV,OACI,oBACImL,UAAWoC,EAEXjC,QAAS,WACLR,EAASrB,GAAUvI,KAJ3B,SAOKA,GALI0L,MASjB,oBAAIzB,UAAU,eAAd,SACI,qBACIA,UAAU,WACVG,QAAS,WACLR,EAASpB,GAAS,aAI9B,oBAAIyB,UAAU,eAAd,SACI,qBACIA,UAAU,aACVG,QAAS,WACLR,EAASpB,GAAS,mBAMtC,sBAAKyB,UAAU,wBAAf,UACKmC,EACAF,EACAC,WCxFFG,GCEE,SAACjG,GAAW,IACnBqC,EAAarC,EAAbqC,SACN,OACI,qBAAKuB,UAAU,0BAAf,SACKvB,EAASrH,KAAI,SAACrB,EAAM0L,GACjB,OACI,qBAAKzB,UAAU,yBAAf,SACI,sBAAKA,UAAU,qCAAf,UACKjK,EAAKQ,KADV,KACkB,IACd,cAAC,IAAD,CAAM0J,GAAE,eAAUlK,EAAKK,SAAvB,SACI,uBAAM4J,UAAU,gBAAhB,UACKjK,EAAK4B,mBAAoB,SAGlC,uBAAMqI,UAAU,eAAhB,UACK,IACAjK,EAAKkB,qBAV2BwK,SCPlDa,GCIW,SAAClG,GAAW,IAC5BtE,EAAOsE,EAAPtE,GACF6H,EAAWC,cACXnB,EAAWoB,aAAY,SAAChD,GACxB,OAAOA,EAAM8B,wBAAwBF,YAKzC,OAHAsB,qBAAU,WACNJ,EAAS9H,EAA2BC,MACrC,CAACA,IACG,cAAC,GAAD,CAAY2G,SAAUA,KCdlB8D,GC+FA/B,aARS,SAAC3D,GAIrB,MAAO,CACHjH,SAFAiH,EADAoB,gBAAmBrI,YAMZ4K,EAzFG,SAACpE,GAAW,IAAD,EACnBxG,EAAiBwG,EAAjBxG,SAAUkC,EAAOsE,EAAPtE,GACZ6H,EAAWC,cAKf,OAJAG,qBAAU,WACNJ,EAASlK,EAAgBqC,MAC1B,CAACA,IAGA,sBAAKkI,UAAU,0BAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,6BAAKpK,EAASoB,UAElB,sBAAKgJ,UAAU,iBAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,0CACCpK,EAASqB,iBAEd,sBAAK+I,UAAU,yBAAf,UACI,2CACCpK,EAASsB,sBAEd,sBAAK8I,UAAU,yBAAf,UACI,2CACCpK,EAASe,WACV,mDAIZ,sBAAKqJ,UAAU,kCAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,2CACf,qBAAKA,UAAU,gCAAf,SACKpK,EAASuB,QAEd,qBAAK6I,UAAU,kDAEnB,qBACIA,UAAU,qCACVwC,wBAAyB,CAAEC,OAAQ7M,EAASW,QAEhD,sBAAKyJ,UAAU,gCAAf,UACI,qBAAKA,UAAU,qBAAf,mBACKpK,EAASc,YADd,aACK,EAAeU,KAAI,SAACrB,EAAM0L,GACvB,OACI,qBAAiBzB,UAAU,WAA3B,SACKjK,GADK0L,QAMtB,sBAAKzB,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMC,GAAE,gBAAWrK,EAASQ,SAA5B,SACI,qBAAK4J,UAAU,0BAAf,SACI,qBAAKE,IAAKtK,EAASgB,yBAG3B,sBAAKoJ,UAAU,2BAAf,UACI,cAAC,IAAD,CAAMC,GAAE,gBAAWrK,EAASQ,SAA5B,SACI,qBAAK4J,UAAU,2BAAf,SACKpK,EAASkB,sBAGlB,qBACIkJ,UAAU,iCACVhJ,MAAM,mBAFV,SAIKpB,EAASY,+BAM9B,cAAC,GAAD,CAAqBsB,GAAIA,UC/EtB4K,GCMU,SAACtG,GAAW,IAC3BtE,EAAOsE,EAAPtE,GACF6H,EAAWC,cACXnB,EAAWoB,aAAY,SAAChD,GACxB,OAAOA,EAAM2B,uBAAuBC,YAKxC,OAHAsB,qBAAU,WACNJ,EAAS3H,EAA0BF,MACpC,CAACA,IACG,cAAC,GAAD,CAAY2G,SAAUA,KCflBkE,GCkGAnC,aAhBS,SAAC3D,GAAW,IAAD,EAG3BA,EADAa,eAEJ,MAAO,CACHkF,YAL2B,EAET/E,YAIlBC,eAN2B,EAEIA,eAK/BC,oBAP2B,EAEoBA,uBAcxCyC,EA3FE,SAACpE,GAAW,IACnBwG,EAAyDxG,EAAzDwG,YAAa9E,EAA4C1B,EAA5C0B,eAAgBhG,EAA4BsE,EAA5BtE,GAAIiG,EAAwB3B,EAAxB2B,oBACnC4B,EAAWC,cACfG,qBAAU,WACNJ,EAASzH,EAAe,CAACJ,EAAIiG,OAC9B,CAACjG,EAAIiG,IACR,IAAI8E,EAAUD,EAAYxL,KAAI,SAACrB,EAAM0L,GACjC,IAAIqB,EAAiB/M,EAAKwC,YACtB,qBAAKyH,UAAU,uCACf,KACJ,OACI,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,2CACf,qBAAKA,UAAU,gCAAf,SACKjK,EAAKoB,QAEV,qBAAK6I,UAAU,+CACd8C,KAEL,qBACI9C,UAAU,mCACVwC,wBAAyB,CAAEC,OAAQ1M,EAAKQ,QAE5C,sBAAKyJ,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMC,GAAE,eAAUlK,EAAKK,SAAvB,SACI,qBAAK4J,UAAU,0BAAf,SACI,qBAAKE,IAAKnK,EAAKa,yBAGvB,sBAAKoJ,UAAU,2BAAf,UACI,cAAC,IAAD,CAAMC,GAAE,eAAUlK,EAAKK,SAAvB,SACI,qBAAK4J,UAAU,0BAAf,SACKjK,EAAKe,sBAGd,qBAAKkJ,UAAU,iCAAf,SACKjK,EAAKS,2BA1BYiL,MAiC1C,OACI,sBAAKzB,UAAU,yBAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,sBAAKA,UAAU,iCAAf,UACK4C,EAAYG,OADjB,cAGA,qBAAK/C,UAAU,iCAAf,SACKlC,EAAe1G,KAAI,SAACrB,EAAM0L,GACvB,IAAIW,EACArM,IAASgI,EACH,sBACA,eACV,OACI,qBACIiC,UAAWoC,EAEXjC,QAAS,WACLR,EAAS3B,GAAuBjI,KAJxC,SAOKA,GALI0L,WAWzB,qBAAKzB,UAAU,iCAAf,SAAiD6C,IACjD,cAAC,GAAD,CAAoB/K,GAAIA,UC9ErBkL,GCIO,WAClB,IAAIlB,EAAQmB,eACZ,OACI,sBAAKjD,UAAU,gBAAf,UACI,cAAC,GAAD,CAAalI,GAAIgK,EAAM5I,OAAOpB,KAC9B,cAAC,GAAD,CAAYA,GAAIgK,EAAM5I,OAAOpB,SCT1BoL,GCCO,WAClB,OACI,qBAAKlD,UAAU,iBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,qBAAKD,UAAU,uBAAf,SACI,cAAC,IAAD,CAAMC,GAAG,QAAT,oBAEJ,qBAAKD,UAAU,uBAAf,SACI,cAAC,IAAD,CAAMC,GAAG,SAAT,2BCZLkD,GCWI,WAAO,IAAD,EACazC,mBAAS,MADtB,mBAChBC,EADgB,KACJyC,EADI,KAEjBzD,EAAWC,cACXf,EAAQgB,aAAY,SAAChD,GAAW,IAEZgC,EAChBhC,EADA+B,aAAgBC,MAEpB,OAAK8B,EAGE9B,EAAMhK,QAAO,SAACkB,GACjB,GACIA,EAAKgB,aACAsM,cACAC,QAAQ3C,EAAW0C,gBAAkB,EAE1C,OAAOtN,KARJ8I,IAWZiB,KACCvK,EAAOsK,aAAY,SAAChD,GAAW,IAAD,EAG1BA,EADA+B,aAEJ,MAAO,CAAE9E,aAJqB,EAEVA,aAEGuE,QAJO,EAEIA,QAEFvJ,MAJF,EAEaA,MAEJ2H,QAJT,EAEoBA,WAGnDqD,KACGhG,EAA0CvE,EAA1CuE,aAAchF,EAA4BS,EAA5BT,MAAOuJ,EAAqB9I,EAArB8I,QAAS5B,EAAYlH,EAAZkH,QACpCsD,qBAAU,WACNJ,EAAS9F,EAAY,CAAC/E,EAAOgF,OAC9B,CAACA,EAAchF,IAClB,IAAImN,EAA6B,YAAZxF,EAAwB,cAAC,GAAD,IAAqB,KAC9DyF,EAA2B,WAAZzF,EAAuB,cAAC,GAAD,IAAmB,KACzD8G,IAAYtB,GAAkBC,GAC9BsB,EAAY3E,EAAMzH,KAAI,SAACrB,EAAM0L,GAC7B,OACI,qBAAKzB,UAAU,kBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,eAAUlK,EAAKK,SAAvB,SACI,qBAAK8J,IAAKnK,EAAKc,oBAGvB,sBAAKmJ,UAAU,yBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,eAAUlK,EAAKK,SAAvB,SACKL,EAAKgB,iBAGd,qBAAKiJ,UAAU,qBAAf,SACKjK,EAAK+C,WAEV,qBACIkH,UAAU,uBACVhJ,MAAM,aAFV,SAIKjB,EAAKU,aAEV,qBACIuJ,UAAU,qBACVwC,wBAAyB,CAAEC,OAAQ1M,EAAKmE,mBAxBlBuH,MA+B1CU,EAAUoB,EAAUC,EAAY,KACpC,OACI,sBAAKxD,UAAU,kCAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,yCAEJ,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,uBACIiB,KAAK,OACLC,YAAY,iBACZC,SAAU,SAACJ,GAAD,OAAOqC,EAAcrC,EAAEK,OAAOrN,YAGhD,qBAAKiM,UAAU,6BAAf,SACI,qBAAIA,UAAU,qBAAd,UACK3B,EAAQjH,KAAI,SAACrB,EAAM0L,GAChB,IAAIW,EACAtI,IAAiB/D,EACX,sBACA,eACV,OACI,oBACIiK,UAAWoC,EAEXjC,QAAS,WACLR,EAASZ,GAAmBhJ,KAJpC,SAOKA,GALI0L,MASjB,oBAAIzB,UAAU,eAAd,SACI,qBACIA,UAAU,WACVG,QAAS,WACLR,EAASX,GAAkB,aAIvC,oBAAIgB,UAAU,eAAd,SACI,qBACIA,UAAU,aACVG,QAAS,WACLR,EAASX,GAAkB,sBAOnD,sBAAKgB,UAAU,kBAAf,UACKiC,EADL,IACsBC,EADtB,IACqCC,SClIlCsB,GCiIAjD,aAlBS,SAAC3D,GAAW,IAAD,EAG3BA,EADAoC,YAEJ,MAAO,CACHyE,SAL2B,EAEZhN,KAIfoD,aAN2B,EAENA,aAKrBoF,gBAP2B,EAEQA,gBAMnCzC,QAR2B,EAEyBA,YASjC,SAACkD,GACxB,MAAO,CACHR,iBAAkB,SAACpL,GACf4L,EAASR,GAAiBpL,QAIvByM,EAxHG,SAACpE,GAAW,IAAD,EACSsE,mBAAS,IADlB,mBACpBC,EADoB,KACRC,EADQ,KAErBjB,EAAWC,cAEX9F,EAKAsC,EALAtC,aACAoF,EAIA9C,EAJA8C,gBACAwE,EAGAtH,EAHAsH,SACAjH,EAEAL,EAFAK,QACA0C,EACA/C,EADA+C,iBAEJY,qBAAU,WACNJ,EAASxF,EAAWL,MACrB,CAACA,IACJ,IAAIpD,EAAOgN,EAAS7O,QAAO,SAACkB,GACxB,OAAK4K,EAGD5K,EAAKsE,KAAKiJ,QAAQ3C,IAAe,EAC1B5K,OADX,EAFWA,IAKZ,IACCkM,EAA6B,YAAZxF,EAAwB,cAAC,GAAD,IAAqB,KAC9DyF,EAA2B,WAAZzF,EAAuB,cAAC,GAAD,IAAmB,KACzD8G,IAAYtB,GAAkBC,GAC9ByB,EAAWjN,EAAKU,KAAI,SAACrB,EAAM0L,GAC3B,OACI,qBAAIzB,UAAU,WAAd,UACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMC,GAAE,yBAAoBlK,EAAKsE,MAAjC,SAA0CtE,EAAKsE,SAEnD,sBAAK2F,UAAU,kBAAf,oDAC4CjK,EAAKsE,KADjD,UAGA,qBAAK2F,UAAU,YAAf,SACI,sBAAKA,UAAU,mBAAf,UACKjK,EAAKqE,MADV,oBARsBqH,MAelCU,EAAUoB,EAAUI,EAAW,KACnC,OACI,sBAAK3D,UAAU,iCAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,wCAEJ,qBAAKA,UAAU,gCAAf,yLAKA,sBAAKA,UAAU,4BAAf,UACI,sBAAKA,UAAU,kBAAf,UACK,IACD,uBACIiB,KAAK,OACLC,YAAY,qBACZnN,MAAO4M,EACPQ,SAAU,SAACJ,GACPH,EAAcG,EAAEK,OAAOrN,aAInC,qBAAKiM,UAAU,oBAAf,SACI,6BACKd,EAAgB9H,KAAI,SAACrB,EAAM0L,GACxB,IAAIW,EACArM,IAAS+D,EACH,sBACA,eACV,OACI,oBACIkG,UAAWoC,EAEXjC,QAAS,WACLhB,EAAiBpJ,IAJzB,SAOKA,GALI0L,aAY7B,sBAAKzB,UAAU,0BAAf,UACKmC,EACAF,EACAC,WClGF0B,GCIc,SAACxH,GAAW,IAC/BtE,EAAOsE,EAAPtE,GACF6H,EAAWC,cAQTrF,EANKsF,aAAY,SAAChD,GAIpB,MAAO,CAAEtC,KADLsC,EADAuC,YAAe7E,QAGpBuF,KACGvF,KAIN,OAHAwF,qBAAU,WACNJ,EAASrF,EAAYxC,MACtB,CAACA,IAEA,sBAAKkI,UAAU,wBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKE,IAAK3F,EAAK1D,kBAEnB,sBAAKmJ,UAAU,uBAAf,UACKzF,EAAK9D,WAAY,IAClB,sBAAMuJ,UAAU,sBAAhB,2BAEJ,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,wBAAf,SACKzF,EAAKkB,oBAEV,qBAAKuE,UAAU,0BAAf,SACKzF,EAAKgB,sBAEV,qBAAKyE,UAAU,0BAAf,SACKzF,EAAKa,4BAIlB,sBAAK4E,UAAU,8BAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,6BAAKzF,EAAKxD,iBAEd,qBACIiJ,UAAU,kBACVwC,wBAAyB,CAAEC,OAAQlI,EAAKL,eAGhD,sBAAK8F,UAAU,gCAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,8BAAMzF,EAAKjD,eACX,sBAAM0I,UAAU,sBAAhB,wBAEJ,sBAAKA,UAAU,sBAAf,UACI,8BAAMzF,EAAKQ,iBACX,sBAAMiF,UAAU,sBAAhB,6BAGR,qBAAKA,UAAU,qBAAf,SAAqCzF,EAAKzB,WAC1C,sBAAKkH,UAAU,4BAAf,wBACgB,IACZ,sBAAMA,UAAU,sBAAhB,SACKzF,EAAKtD,mBAGd,sBAAK+I,UAAU,0BAAf,sBACc,IACV,sBAAMA,UAAU,sBAAhB,SACKzF,EAAKoB,6BCtEfkI,GCKc,SAACzH,GAAW,IAC/BtE,EAAOsE,EAAPtE,GACF6H,EAAWC,cACXrK,EAAOsK,aAAY,SAAChD,GAIpB,MAAO,CAAEnG,KADLmG,EADAuC,YAAe1I,QAGpBoJ,KACHC,qBAAU,WACNJ,EAAS9E,EAAe/C,MACzB,CAACA,IAXgC,IAY9BpB,EAASnB,EAATmB,KACN,OACI,sBAAKsJ,UAAU,qBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,4CAEJ,qBAAKA,UAAU,yBAAf,SACI,oBAAIA,UAAU,sBAAd,SACKtJ,EAAKU,KAAI,SAACrB,EAAM0L,GACb,OACI,qBAAIzB,UAAU,sBAAd,UACI,8BACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACIC,GAAE,yBAAoBlK,EAAKkF,UAD/B,SAGKlF,EAAKkF,eAIlB,sBAAK+E,UAAU,YAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAMA,UAAU,sBAAhB,mBAEQ,IACPjK,EAAK+E,gBAEV,sBAAKkF,UAAU,mBAAf,UACI,sBAAMA,UAAU,sBAAhB,mBAEQ,IACPjK,EAAKuB,qBArBuBmK,cC3BtDqC,GCSe,SAAC1H,GAAW,IAChCtE,EAAOsE,EAAPtE,GACF6H,EAAWC,cACXrK,EAAOsK,aAAY,SAAChD,GAAW,IAAD,EAS1BA,EAPAuC,YAQJ,MAAO,CACHC,MAX0B,EAGtBA,MASJvF,aAZ0B,EAItBA,aASJuE,QAb0B,EAKtBA,QASJiB,SAd0B,EAMtBA,SASJC,aAf0B,EAOtBA,gBAUTO,KACGT,EAAyD9J,EAAzD8J,MAAOvF,EAAkDvE,EAAlDuE,aAAcuE,EAAoC9I,EAApC8I,QAASiB,EAA2B/J,EAA3B+J,SAAUC,EAAiBhK,EAAjBgK,aAC1CwC,EAAiBC,mBACjB,iBAAO,CACHlK,KACAgC,kBAEJ,CAAChC,EAAIgC,IAeT,OAbAiG,qBAAU,WACN,OAAQR,GACJ,IAAK,MACDI,EAAShF,EAAiBoH,IAC1B,MACJ,IAAK,YACDpC,EAASlF,EAAqBsH,IAC9B,MACJ,IAAK,UACDpC,EAASjF,EAAmBqH,OAGrC,CAACA,EAAgBxC,IAEhB,sBAAKS,UAAU,kBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,yCAAYT,OAEhB,sBAAKS,UAAU,+BAAf,UACI,6BACKV,EAASlI,KAAI,SAACrB,EAAM0L,GACjB,IAAIW,EACArM,IAASwJ,EACH,sBACA,eACV,OACI,oBACIS,UAAWoC,EAEXjC,QAAS,WACLR,EAASH,GAAgBzJ,KAJjC,SAOKA,GALI0L,QAUrB,6BACKpD,EAAQjH,KAAI,SAACrB,EAAM0L,GAChB,IAAIW,EACArM,IAAS+D,EACH,sBACA,eACV,OACI,oBACIkG,UAAWoC,EAEXjC,QAAS,WACLR,EAASrB,GAAUvI,KAJ3B,SAOKA,GALI0L,cAY7B,qBAAKzB,UAAU,+BAAf,SACI,oBAAIA,UAAU,uBAAd,SACKX,EAAMjI,KAAI,SAACrB,EAAM0L,GACd,IAAIsC,EAAYhO,EAAKwB,YACf,6BACA,oBACN,OACI,qBAAgByI,UAAU,aAA1B,UACI,qBAAKA,UAAW+D,EAAhB,SAA4BhO,EAAKoB,QACjC,qBAAK6I,UAAU,oBAAf,SACKjK,EAAKiB,UAHLyK,cCzGtBuC,GCKG,WACd,IACMlM,EADMmL,eACO/J,OAAbpB,GACN,OACI,sBAAKkI,UAAU,iCAAf,UACI,cAAC,GAAD,CAAwBlI,GAAIA,IAC5B,cAAC,GAAD,CAAwBA,GAAIA,IAC5B,cAAC,GAAD,CAAyBA,GAAIA,QCZ1BmM,GCOC,WACZ,OACI,qBAAKjE,UAAU,cAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,cAAC,GAAD,IACA,eAAC,KAAD,WACI,cAAC,KAAD,CAAOkE,OAAK,EAACC,KAAK,IAAIC,UAAWxC,KACjC,cAAC,KAAD,CACIsC,OAAK,EACLC,KAAK,qBACLC,UAAWxC,KAEf,cAAC,KAAD,CAAOuC,KAAK,SAASC,UAAWjB,KAChC,cAAC,KAAD,CAAOgB,KAAK,YAAYC,UAAWJ,KACnC,cAAC,KAAD,CAAOG,KAAK,QAAQC,UAAWX,KAC/B,cAAC,KAAD,CACIU,KAAK,iBACLC,UAAWpB,gBCzBxBqB,GCOH,WACR,OACI,cAAC,IAAD,UACI,sBAAKvM,GAAG,MAAR,UACI,cAAC,GAAD,IACA,cAAC,GAAD,UCZDyJ,GCaD+C,YAAe,CACzB5F,QAAS,CACLrC,aAAcA,GACdqB,eAAgBA,GAChBQ,iBAAkBA,GAClBD,gBAAiBA,GACjBO,uBAAwBA,GACxBG,wBAAyBA,GACzBP,cAAeA,GACfQ,aAAcA,GACdK,YAAaA,GACbG,YAAaA,MClBfjD,GAAmB,IAAI3D,EAC7B+L,IAASC,OACL,cAAC,IAAD,CAAUjD,MAAOA,GAAjB,SACI,cAAC1F,GAAD,CAAiC9H,MAAOoI,GAAxC,SACI,cAAC,GAAD,QAGRsI,SAASC,eAAe,W","file":"static/js/main.65affb89.chunk.js","sourcesContent":["let convertDate = (value) => {\n    let date = new Date(value * 1000);\n    let months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n    let day = date.getDay() < 10 ? `0${date.getDay()}` : `${date.getDay()}`;\n    let hours =\n        date.getHours() < 10 ? `0${date.getHours()}` : `${date.getHours()}`;\n    let minutes =\n        date.getMinutes() < 10\n            ? `0${date.getMinutes()}`\n            : `${date.getMinutes()}`;\n    return `${hours}:${minutes} ${day} ${\n        months[date.getMonth()]\n    } ${date.getFullYear()}`;\n};\nexport default convertDate;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport convertDate from \"./convert-date\";\nlet getAllQuestions = createAsyncThunk(\n    \"questionsReducer/getAllQuestions\",\n    async (value) => {\n        let { filter, order } = value;\n        let url = `https://api.stackexchange.com/2.2/questions?order=${order}&sort=${filter}&site=stackoverflow&filter=!9_bDDxJY5`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return allQuestionsResponseTemplate(data);\n            });\n    }\n);\nlet getQuestionById = createAsyncThunk(\n    \"questionReducer/getQuestionById\",\n    async (value) => {\n        console.log(\"question render\");\n        let url = `https://api.stackexchange.com/2.2/questions/${value}?order=desc&sort=activity&site=stackoverflow&filter=!9_bDDxJY5`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                let question = data.items.find((elem) => elem);\n                return questionResponseTemplate(question);\n            });\n    }\n);\nlet getQuestionsByTags = createAsyncThunk(\n    \"questionsReducer/getQuestionsByTags\",\n    async (value) => {\n        let { filter, order, tagIdForSearch } = value;\n        let url = `https://api.stackexchange.com/2.2/search/advanced?order=${order}&sort=${filter}&tagged=${tagIdForSearch}&site=stackoverflow`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return allQuestionsResponseTemplate(data);\n            });\n    }\n);\nlet getQuestionsBySearch = createAsyncThunk(\n    \"questionsReducer/getQuestionsBySearch\",\n    async (value) => {\n        let url = `https://api.stackexchange.com/2.2/search?order=desc&sort=activity&intitle=${value}&site=stackoverflow`;\n        return fetch(url)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                return allQuestionsResponseTemplate(data);\n            });\n    }\n);\nlet questionResponseTemplate = (data) => {\n    return {\n        user_id: data.owner.user_id,\n        question_id: data.question_id,\n        body: data.body,\n        owner_reputation: data.owner.reputation,\n        tags: data.tags,\n        view_count: data.view_count,\n        user_profile_image: data.owner.profile_image,\n        user_profile_name: data.owner.display_name,\n        title: data.title,\n        creation_date: convertDate(data.creation_date),\n        last_activity_date: convertDate(data.last_activity_date),\n        score: data.score,\n    };\n};\nlet allQuestionsResponseTemplate = (data) => {\n    return data.items.map((elem) => {\n        return {\n            title: elem.title,\n            view_count: elem.view_count,\n            accepted_answer_id: elem.accepted_answer_id\n                ? elem.accepted_answer_id\n                : null,\n            answer_count: elem.answer_count,\n            creation_date: convertDate(elem.creation_date),\n            is_answered: elem.is_answered,\n            last_activity_date: convertDate(elem.last_activity_date),\n            question_id: elem.question_id,\n            score: elem.score,\n            tags: elem.tags,\n            body: elem.body,\n            owner_user_id: elem.owner.user_id,\n            owner_reputation: elem.owner.reputation,\n            owner_accept_rate: elem.owner.accept_rate\n                ? elem.owner.accept_rate\n                : null,\n            owner_display_name: elem.owner.display_name,\n            owner_profile_image: elem.owner.profile_image,\n        };\n    });\n};\n\nexport {\n    getAllQuestions,\n    getQuestionById,\n    getQuestionsByTags,\n    getQuestionsBySearch,\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport convertDate from \"./convert-date\";\nlet getCommentsForQuestionById = createAsyncThunk(\n    \"questionCommentsReducer/getCommentsForQuestionById\",\n    async (id) => {\n        let url = `https://api.stackexchange.com/2.2/questions/${id}/comments?order=asc&sort=creation&site=stackoverflow&filter=!9_bDE0E4s`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return data.items.map((elem) => {\n                    return commentsResponseTemplate(elem);\n                });\n            });\n    }\n);\nlet getCommentsForAnswersById = createAsyncThunk(\n    \"answersCommentsReducer/getCommentsForAnswersById\",\n    async (id) => {\n        let url = `https://api.stackexchange.com/2.2/answers/${id}/comments?order=desc&sort=creation&site=stackoverflow&filter=!9_bDE0E4s`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return data.items.map((elem) => {\n                    return commentsResponseTemplate(elem);\n                });\n            });\n    }\n);\nlet commentsResponseTemplate = (data) => {\n    return {\n        body: data.body,\n        comment_id: data.comment_id,\n        creation_date: convertDate(data.creation_date),\n        owner_display_name: data.owner.display_name,\n        owner_reputation: data.reputation,\n        user_id: data.owner.user_id,\n    };\n};\nexport { getCommentsForQuestionById, getCommentsForAnswersById };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport convertDate from \"./convert-date\";\nconst getAnswersById = createAsyncThunk(\n    \"answersReducer/getAnswersById\",\n    async (data) => {\n        let [id, sort] = data;\n        let url = `https://api.stackexchange.com/2.2/questions/${id}/answers?order=desc&sort=${sort}&site=stackoverflow&filter=!9_bDE(fI5`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result.items.map((elem) => {\n                    return answerResponseTemplate(elem);\n                });\n            });\n    }\n);\nlet answerResponseTemplate = (data) => {\n    return {\n        user_id: data.owner.user_id,\n        answer_id: data.answer_id,\n        body: data.body,\n        is_accepted: data.is_accepted,\n        owner_reputation: data.owner.reputation,\n        user_profile_image: data.owner.profile_image,\n        user_profile_name: data.owner.display_name,\n        creation_date: convertDate(data.creation_date),\n        last_activity_date: convertDate(data.last_activity_date),\n        score: data.score,\n    };\n};\nexport { getAnswersById };\n","import React from \"react\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport qs from \"qs\";\nexport default class AppRegistrationServices extends React.Component {\n    getCodeForLogin() {\n        const base_url = \"https://stackoverflow.com/oauth/?\";\n        let params = {\n            client_id: 19244,\n            scope: \"write_access\",\n            redirect_uri: \"https://szyatyugin.github.io.stackoverflow-clone/\",\n        };\n        let url = `${base_url}${qs.stringify(params)}`;\n        location = url;\n    }\n}\nlet finishRegistration = createAsyncThunk(\n    \"tokenReducer/finishRegistration\",\n    async (data) => {\n        const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n        const urlForAuth = \"https://stackoverflow.com/oauth/access_token/json\";\n        let params = {\n            client_id: 19244,\n            client_secret: \"ybUFsFqqDiW9Rs2A7ZIgRA((\",\n            code: data,\n            redirect_uri: \"https://szyatyugin.github.io.stackoverflow-clone/\",\n        };\n        return await fetch(proxyURL + urlForAuth, {\n            method: \"POST\",\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            redirect: \"follow\",\n            body: qs.stringify(params),\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                localStorage.setItem(\"token\", data);\n                return data;\n            })\n            .catch((error) => {\n                return error;\n            });\n    }\n);\nexport { finishRegistration };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst getAllUsers = createAsyncThunk(\n    \"usersReducer/getAllUsers\",\n    async (data) => {\n        let [order, activeFilter] = data;\n        let url = `https://api.stackexchange.com/2.2/users?order=${order}&sort=${activeFilter}&site=stackoverflow&filter=!9_bDDp)d5`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((result) => {\n                return result.items.map((elem) => {\n                    return usersTemplate(elem);\n                });\n            });\n    }\n);\n\nlet usersTemplate = (data) => {\n    return {\n        location: data.location,\n        account_id: data.account_id,\n        user_id: data.user_id,\n        reputation: data.reputation,\n        repuation_change_week: data.repuation_change_week,\n        profile_image: data.profile_image,\n        display_name: data.display_name,\n        about_me: data.about_me,\n    };\n};\nexport { getAllUsers };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nlet getAllTags = createAsyncThunk(\"tagsReducer/getAllTags\", async (sort) => {\n    let url = `https://api.stackexchange.com/2.2/tags?order=desc&sort=${sort}&site=stackoverflow`;\n    return await fetch(url)\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error(\n                    `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                );\n            }\n            return response.json();\n        })\n        .then((data) => {\n            return data.items.map((elem) => {\n                return {\n                    count: elem.count,\n                    name: elem.name,\n                };\n            });\n        });\n});\nexport { getAllTags };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport convertDate from \"./convert-date\";\nlet getUserById = createAsyncThunk(\"userReducer/getUserById\", async (id) => {\n    let url = `https://api.stackexchange.com/2.2/users/${id}?order=desc&sort=reputation&site=stackoverflow&filter=!--1nZv)deGu1`;\n    return await fetch(url)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            let user = data.items.find((elem) => {\n                return elem;\n            });\n            return templateForUser(user);\n        });\n});\nlet getUserQuestionsById = createAsyncThunk(\n    \"userReducer/getUserQuestionsById\",\n    async (data) => {\n        let { id, activeFilter } = data;\n        let url = `https://api.stackexchange.com/2.2/users/${id}/questions?pagesize=5&order=desc&sort=${activeFilter}&site=stackoverflow`;\n        return await fetch(url)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                return data.items.map((elem) => {\n                    return {\n                        is_answered: elem.is_answered,\n                        score: elem.score,\n                        title: elem.title,\n                        question_id: elem.question_id,\n                    };\n                });\n            });\n    }\n);\nlet getUserAnswersById = createAsyncThunk(\n    \"userReducer/getUserAnswersById\",\n    async (data) => {\n        let { id, activeFilter } = data;\n        let url = `https://api.stackexchange.com/2.2/users/${id}/answers?pagesize=5&order=desc&sort=${activeFilter}&site=stackoverflow&filter=!9_bDE(DzN`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return data.items.map((elem) => {\n                    return {\n                        is_answered: elem.is_answered,\n                        score: elem.score,\n                        title: elem.title,\n                        question_id: elem.question_id,\n                    };\n                });\n            });\n    }\n);\nlet getUserPostsById = createAsyncThunk(\n    \"userReducer/getUserPostsById\",\n    async (data) => {\n        let { id, activeFilter } = data;\n        let url = `https://api.stackexchange.com/2.2/users/${id}/posts?pagesize=5&order=desc&sort=${activeFilter}&site=stackoverflow&filter=!9_bDDt835`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return data.items.map((elem) => {\n                    return {\n                        user_id: elem.user_id,\n                        post_id: elem.post_id,\n                        score: elem.score,\n                        title: elem.title,\n                        last_activity_date: convertDate(\n                            elem.last_activity_date\n                        ),\n                    };\n                });\n            });\n    }\n);\nlet getUserTopTags = createAsyncThunk(\n    \"userReducer/getUserTopTags\",\n    async (id) => {\n        let url = `https://api.stackexchange.com/2.2/users/${id}/top-tags?pagesize=5&site=stackoverflow&filter=!9_bDE.B6I`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                return data.items.map((elem) => {\n                    return {\n                        user_id: elem.user_id,\n                        answer_count: elem.answer_count,\n                        answer_score: elem.answer_score,\n                        question_count: elem.question_count,\n                        question_score: elem.question_score,\n                        tag_name: elem.tag_name,\n                    };\n                });\n            });\n    }\n);\nlet getMyAccount = createAsyncThunk(\n    \"tokenReducer/getMyAccount\",\n    async (token) => {\n        let url = `https://api.stackexchange.com/2.2/me?order=desc&sort=reputation&site=stackoverflow&filter=!--1nZv)fAzeX&key=wsIZYqmzzlvamta3lpmnnQ((&access_token=${token}`;\n        return await fetch(url)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        `Sorry. We've got an error. Response status ${response.status}. It's a bad request`\n                    );\n                }\n                return response.json();\n            })\n            .then((data) => {\n                let user = data.items.find((elem) => {\n                    return elem;\n                });\n                return templateForUser(user);\n            })\n            .catch((error) => {\n                return error;\n            });\n    }\n);\nlet templateForUser = (data) => {\n    return {\n        badge_counts_bronze: data.badge_counts.bronze,\n        badge_counts_silver: data.badge_counts.silver,\n        badge_counts_gold: data.badge_counts.gold,\n        view_count: data.view_count,\n        answer_count: data.answer_count,\n        question_count: data.question_count,\n        account_id: data.account_id,\n        user_id: data.user_id,\n        reputation: data.reputation,\n        creation_date: convertDate(data.creation_date),\n        last_access_date: convertDate(data.last_access_date),\n        about_me: data.about_me,\n        location: data.location,\n        profile_image: data.profile_image,\n        display_name: data.display_name,\n    };\n};\nexport {\n    getUserById,\n    getUserQuestionsById,\n    getUserAnswersById,\n    getUserPostsById,\n    getUserTopTags,\n    getMyAccount,\n};\n","import React from \"react\";\n\nconst {\n    Provider: AppRegistrationServicesProvider,\n    Consumer: AppRegistrationServicesConsumer,\n} = React.createContext();\nexport { AppRegistrationServicesProvider, AppRegistrationServicesConsumer };\n","import AppLoginHOC from \"./App-HOC-registration\";\nexport default AppLoginHOC;\n","import React from \"react\";\nimport { AppRegistrationServicesConsumer } from \"../../App-Services-Context\";\n\nconst AppLoginHOC = (Wrap) => {\n    return class HOC extends React.Component {\n        render() {\n            return (\n                <AppRegistrationServicesConsumer>\n                    {(appLoginServices) => {\n                        return (\n                            <Wrap\n                                {...this.props}\n                                appLoginServices={appLoginServices}\n                            />\n                        );\n                    }}\n                </AppRegistrationServicesConsumer>\n            );\n        }\n    };\n};\nexport default AppLoginHOC;\n","import qs from \"qs\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { finishRegistration, getMyAccount } from \"../../App-services\";\nlet tokenReducer = createSlice({\n    name: \"tokenReducer\",\n    initialState: {\n        client_id: 19244,\n        token: null,\n        expires: null,\n        loading: \"idle\",\n        error: null,\n        currentUserAccount: {},\n    },\n    reducers: {\n        getToken: (state) => {\n            let data = qs.parse(localStorage.getItem(\"token\"));\n            state.token = null || data.access_token;\n            state.expires = null || data.expires;\n        },\n        LogOut: (state) => {\n            localStorage.removeItem(\"token\");\n            state.token = null;\n            state.expires = null;\n        },\n    },\n    extraReducers: {\n        [finishRegistration.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getMyAccount.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [finishRegistration.fulfilled]: (state, action) => {\n            localStorage.setItem(\"token\", qs.stringify(action.payload));\n            state.token = action.payload.access_token;\n            state.expires = action.payload.expires;\n            state.loading = \"succeeded\";\n        },\n        [getMyAccount.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.currentUserAccount = action.payload;\n        },\n        [finishRegistration.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getMyAccount.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\nexport const { getToken, LogOut } = tokenReducer.actions;\nexport default tokenReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAnswersById } from \"../../App-services\";\n\nconst answersReducer = createSlice({\n    name: \"answersReducer\",\n    initialState: {\n        questionsFetchError: null,\n        questionsFetchStatus: \"idle\",\n        answersById: [],\n        answersFilters: [\"activity\", \"creation\", \"votes\"],\n        answersActiveFilter: \"creation\",\n    },\n    reducers: {\n        setAnswersActiveFilter: (state, action) => {\n            state.answersActiveFilter = action.payload;\n        },\n    },\n    extraReducers: {\n        [getAnswersById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getAnswersById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.answersById = action.payload;\n        },\n        [getAnswersById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\nexport const { setAnswersActiveFilter } = answersReducer.actions;\nexport default answersReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getQuestionById } from \"../../App-services\";\nconst questionReducer = createSlice({\n    name: \"questionReducer\",\n    initialState: {\n        error: null,\n        loading: \"idle\",\n        question: {},\n    },\n    reducers: {},\n    extraReducers: {\n        [getQuestionById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getQuestionById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.question = action.payload;\n        },\n        [getQuestionById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\nexport default questionReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n    getAllQuestions,\n    getQuestionsByTags,\n    getQuestionsBySearch,\n} from \"../../App-services\";\nconst questionsReducer = createSlice({\n    name: \"questionsReducer\",\n    initialState: {\n        error: null,\n        loading: \"idle\",\n        allQuestions: [],\n    },\n    reducers: {},\n    extraReducers: {\n        [getAllQuestions.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getAllQuestions.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.allQuestions = action.payload;\n        },\n        [getAllQuestions.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getQuestionsByTags.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getQuestionsByTags.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.allQuestions = action.payload;\n        },\n        [getQuestionsByTags.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getQuestionsBySearch.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getQuestionsBySearch.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.allQuestions = action.payload;\n        },\n        [getQuestionsBySearch.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\nexport default questionsReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterReducer = createSlice({\n    name: \"filterReducer\",\n    initialState: {\n        filters: [\"hot\", \"activity\", \"votes\", \"creation\", \"week\", \"month\"],\n        activeFilter: \"activity\",\n        order: \"desc\",\n    },\n    reducers: {\n        setFilter: (state, action) => {\n            state.activeFilter = action.payload;\n        },\n        setOrder: (state, action) => {\n            state.order = action.payload;\n        },\n    },\n});\nexport const { setFilter, setOrder } = filterReducer.actions;\nexport default filterReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCommentsForAnswersById } from \"../../App-services\";\nconst answersCommentsReducer = createSlice({\n    name: \"answersCommentsReducer\",\n    initialState: {\n        error: null,\n        loading: \"idle\",\n        comments: [],\n    },\n    reducer: {},\n    extraReducers: {\n        [getCommentsForAnswersById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getCommentsForAnswersById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.comments = action.payload;\n        },\n        [getCommentsForAnswersById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\n\nexport default answersCommentsReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCommentsForQuestionById } from \"../../App-services\";\nconst questionCommentsReducer = createSlice({\n    name: \"questionCommentsReducer\",\n    initialState: {\n        error: null,\n        loading: \"idle\",\n        comments: [],\n    },\n    reducer: {},\n    extraReducers: {\n        [getCommentsForQuestionById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getCommentsForQuestionById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.comments = action.payload;\n        },\n        [getCommentsForQuestionById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\n\nexport default questionCommentsReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllUsers } from \"../../App-services\";\nconst usersReducer = createSlice({\n    name: \"usersReducer\",\n    initialState: {\n        error: null,\n        loading: \"idle\",\n        users: [],\n        filters: [\"reputation\", \"creation\", \"name\", \"modified\"],\n        activeFilter: \"reputation\",\n        order: \"desc\",\n        tagsLoading: \"idle\",\n    },\n    reducers: {\n        setUsersPageFilter: (state, action) => {\n            state.activeFilter = action.payload;\n        },\n        setUsersPageOrder: (state, action) => {\n            state.order = action.payload;\n        },\n    },\n    extraReducers: {\n        [getAllUsers.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getAllUsers.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.users = action.payload;\n        },\n        [getAllUsers.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\nexport const { setUsersPageFilter, setUsersPageOrder } = usersReducer.actions;\nexport default usersReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllTags } from \"../../App-services\";\nconst tagsReducer = createSlice({\n    name: \"tagsReducer\",\n    initialState: {\n        error: null,\n        loading: \"idle\",\n        tags: [],\n        tagsPageFilters: [\"popular\", \"name\", \"activity\"],\n        activeFilter: \"popular\",\n    },\n    reducers: {\n        setTagPageFilter: (state, action) => {\n            state.activeFilter = action.payload;\n        },\n    },\n    extraReducers: {\n        [getAllTags.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getAllTags.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.tags = action.payload;\n        },\n        [getAllTags.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\nexport const { setTagPageFilter } = tagsReducer.actions;\nexport default tagsReducer.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n    getUserById,\n    getUserQuestionsById,\n    getUserAnswersById,\n    getUserPostsById,\n    getUserTopTags,\n} from \"../../App-services\";\nconst userReducer = createSlice({\n    name: \"userReducer\",\n    initialState: {\n        loading: \"idle\",\n        error: null,\n        user: {},\n        posts: [],\n        tags: [],\n        activeFilter: \"votes\",\n        filters: [\"votes\", \"creation\"],\n        sortList: [\"All\", \"Questions\", \"Answers\"],\n        sortListItem: \"All\",\n    },\n    reducers: {\n        setFilter: (state, actions) => {\n            state.activeFilter = actions.payload;\n        },\n        setSortListItem: (state, action) => {\n            state.sortListItem = action.payload;\n        },\n    },\n    extraReducers: {\n        [getUserById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getUserPostsById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getUserQuestionsById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getUserAnswersById.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getUserTopTags.pending]: (state) => {\n            state.loading = \"loading\";\n        },\n        [getUserById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.user = action.payload;\n        },\n        [getUserPostsById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.posts = action.payload;\n        },\n        [getUserQuestionsById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.posts = action.payload;\n        },\n        [getUserAnswersById.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.posts = action.payload;\n        },\n        [getUserTopTags.fulfilled]: (state, action) => {\n            state.loading = \"succeeded\";\n            state.tags = action.payload;\n        },\n\n        [getUserById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getUserPostsById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getUserQuestionsById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getUserAnswersById.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n        [getUserTopTags.rejected]: (state, action) => {\n            state.loading = \"failed\";\n            state.error = action.payload;\n        },\n    },\n});\n\nexport const { setFilter, setSortListItem } = userReducer.actions;\nexport default userReducer.reducer;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AppLoginHOC from \"../App-HOC\";\nimport { getMyAccount } from \"../../App-services\";\nimport { LogOut } from \"../../App-store/reducers\";\nconst AppUserLoggedIn = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    let data = useSelector((state) => {\n        let {\n            tokenReducer: { token, currentUserAccount },\n        } = state;\n        return { currentUserAccount, token };\n    }, shallowEqual);\n    let { currentUserAccount, token } = data;\n    useEffect(() => {\n        dispatch(getMyAccount(token));\n    }, [token]);\n    return (\n        <div className=\"app-header__user\">\n            <div className=\"app-header__user-icon\">\n                <Link to={`/user/${currentUserAccount.user_id}`}>\n                    <img src={currentUserAccount.profile_image}></img>\n                </Link>\n            </div>\n            <div className=\"app-header__user-username\">\n                <Link to={`/user/${currentUserAccount.user_id}`}>\n                    {currentUserAccount.display_name}\n                </Link>\n            </div>\n            <div className=\"app-header__login\">\n                <button\n                    className=\"btn\"\n                    onClick={() => {\n                        dispatch(LogOut());\n                        history.push(\"/\");\n                    }}\n                >\n                    <span className=\"badge badge-primary\">log out</span>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default AppLoginHOC(AppUserLoggedIn);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport qs from \"qs\";\nimport AppLoginHOC from \"../App-HOC\";\nimport { finishRegistration } from \"../../App-services\";\n\nconst AppUserLoggedOut = (props) => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    let { appLoginServices } = props;\n    useEffect(() => {\n        let code = qs.parse(location.search);\n        let data = code[\"?code\"];\n        if (data) {\n            dispatch(finishRegistration(data));\n            history.push(\"/\");\n        }\n    }, []);\n    return (\n        <div className=\"app-header__login\">\n            <button\n                className=\"btn\"\n                onClick={() => {\n                    appLoginServices.getCodeForLogin();\n                }}\n            >\n                <span className=\"badge badge-primary\">login</span>\n            </button>\n        </div>\n    );\n};\nAppUserLoggedOut.propTypes = {\n    appLoginServices: PropTypes.object,\n};\nexport default AppLoginHOC(AppUserLoggedOut);\n","import AppHeader from \"./App-header\";\nexport default AppHeader;\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { getQuestionsBySearch } from \"../../App-services\";\nimport AppUserLoggedIn from \"./App-user-logged-in\";\nimport AppUserLoggedOut from \"./App-user-logged-out\";\nimport AppLoginHOC from \"../App-HOC\";\nimport { getToken } from \"../../App-store/reducers\";\nconst AppHeader = (props) => {\n    let { isLoggedIn } = props;\n    let [inputValue, setInputValue] = useState(\"\");\n    let dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getToken());\n    }, []);\n    let userCheckLogin = isLoggedIn ? (\n        <AppUserLoggedIn />\n    ) : (\n        <AppUserLoggedOut />\n    );\n    return (\n        <div className=\"app-header\">\n            <div className=\"container\">\n                <div className=\"app-header__wrapper\">\n                    <div className=\"app-header__title\">\n                        <Link to=\"/\">\n                            {\" \"}\n                            <h2>Stackoveflow Clone</h2>\n                        </Link>\n                    </div>\n\n                    <div className=\"app-header__search\">\n                        <form\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                dispatch(getQuestionsBySearch(inputValue));\n                                setInputValue(\"\");\n                            }}\n                        >\n                            <input\n                                type=\"search\"\n                                placeholder=\"Search all sites\"\n                                value={inputValue}\n                                onChange={(e) => {\n                                    setInputValue(e.target.value);\n                                }}\n                            ></input>\n                        </form>\n                    </div>\n                    <div className=\"app-header__login-status\">\n                        {userCheckLogin}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: !!state.tokenReducer.token,\n    };\n};\nexport default AppLoginHOC(connect(mapStateToProps)(AppHeader));\n\nAppHeader.propTypes = {\n    isLoggedIn: PropTypes.bool,\n    appLoginServices: PropTypes.object,\n};\n","import AppQuestionsListItems from \"./App-questions-list-items\";\nexport default AppQuestionsListItems;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\nconst AppQuestionsListItems = () => {\n    let allQuestions = useSelector((store) => {\n        return store.questionsReducer.allQuestions;\n    }, shallowEqual);\n    let createQuestionWrapper = allQuestions.map((elem) => {\n        let answerSelector = \"question-item__stats-elem\";\n        if (elem.answer_count > 0) {\n            answerSelector += \" active\";\n        }\n        if (elem.is_answered) {\n            answerSelector += \" answered\";\n        }\n        return (\n            <li key={elem.question_id} className=\"questions-list__item\">\n                <div className=\"question-item\">\n                    <div className=\"question-item__stats\">\n                        <Link to={`/questions/${elem.question_id}`}>\n                            <div className=\"question-item__stats-elem\">\n                                <div className=\"votes-value\">{elem.score}</div>\n                                <div className=\"votes-title\">votes</div>\n                            </div>\n                        </Link>\n                        <Link to={`/questions/${elem.question_id}`}>\n                            <div className={answerSelector}>\n                                <div className=\"answers-value\">\n                                    {elem.answer_count}\n                                </div>\n                                <div className=\"answers-title\">answers</div>\n                            </div>\n                        </Link>\n                        <Link to={`/questions/${elem.question_id}`}>\n                            <div className=\"question-item__stats-elem\">\n                                <div className=\"views-value\">\n                                    {elem.view_count}\n                                </div>\n                                <div className=\"views-title\">views</div>\n                            </div>\n                        </Link>\n                    </div>\n                    <div className=\"question-item__section\">\n                        <Link to={`/questions/${elem.question_id}`}>\n                            <div className=\"item__section-question\">\n                                {elem.title}\n                            </div>\n                        </Link>\n                        <div className=\"question-item__info\">\n                            <div className=\"question__item-tags\">\n                                {elem.tags.map((elem, index) => {\n                                    return (\n                                        <div key={index} className=\"item-tag\">\n                                            <Link to={`/questions/tag/${elem}`}>\n                                                {elem}\n                                            </Link>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                            <div className=\"question-item__user\">\n                                <span className=\"question__date\">\n                                    asked {elem.creation_date}\n                                </span>\n                                <Link to={`/user/${elem.owner_user_id}`}>\n                                    <span className=\"question__user\">\n                                        {elem.owner_display_name}\n                                    </span>\n                                </Link>\n                                <span className=\"question__user-reputation\">\n                                    {elem.owner_reputation}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </li>\n        );\n    });\n\n    return <ul className=\"questions-list\">{createQuestionWrapper}</ul>;\n};\nexport default AppQuestionsListItems;\n","import AppLoadingPage from \"./App-loading-page\";\nexport default AppLoadingPage;\n","import React from \"react\";\nimport \"./app-loading.scss\";\nconst AppLoadingPage = () => {\n    return (\n        <div className=\"app-loading\">\n            <div className=\"loadingio-spinner-spinner-a8ln304lsvv\">\n                <div className=\"ldio-paisgl04f9d\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default AppLoadingPage;\n","import AppErrorPage from \"./App-error-page\";\nexport default AppErrorPage;\n","import React from \"react\";\nimport \"./app-error-page.scss\";\nconst AppErrorPage = () => {\n    return (\n        <div className=\"App-error\">\n            <div className=\"App-error__img\"></div>\n            <h2 className=\"App-error__description\">\n                Oops! We have got a problem!\n            </h2>\n        </div>\n    );\n};\nexport default AppErrorPage;\n","import AppQuestionsList from \"./App-questions-list\";\nexport default AppQuestionsList;\n","import React from \"react\";\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useMemo } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AppQuestionsListItems from \"../App-questions-list-items/index\";\nimport { getAllQuestions, getQuestionsByTags } from \"../../App-services\";\nimport { setFilter, setOrder } from \"../../App-store/reducers/filter-reducer\";\nimport AppLoadingPage from \"../App-loading-page\";\nimport AppErrorPage from \"../App-error-page\";\nconst AppQuestionsList = ({ match }) => {\n    let tagIdForSearch = match.params?.id;\n    let data = useSelector((state) => {\n        let {\n            filterReducer: { activeFilter, order, filters },\n            questionsReducer: { loading },\n        } = state;\n        return {\n            filters: filters,\n            filter: activeFilter,\n            order: order,\n            loading: loading,\n        };\n    }, shallowEqual);\n    let { filter, order, filters, loading } = data;\n    let dataForRequest = useMemo(\n        () => ({\n            filter,\n            order,\n            tagIdForSearch,\n        }),\n        [filter, order, tagIdForSearch]\n    );\n    let dispatch = useDispatch();\n    useEffect(() => {\n        if (tagIdForSearch) {\n            dispatch(getQuestionsByTags(dataForRequest));\n        } else {\n            dispatch(getAllQuestions(dataForRequest));\n        }\n    }, [dataForRequest]);\n    let loadingHandler = loading === \"loading\" ? <AppLoadingPage /> : null;\n    let errorHandler = loading === \"failed\" ? <AppErrorPage /> : null;\n    let hasData = !(loadingHandler || errorHandler);\n    let content = hasData ? <AppQuestionsListItems /> : null;\n\n    return (\n        <div className=\"app-questions__section page-section\">\n            <div className=\"app-questions-section__title\">Top Questions</div>\n            <div className=\"app-questions-section__filters\">\n                <ul className=\"question-filters\">\n                    {filters.map((elem, index) => {\n                        let filterClass =\n                            elem === filter\n                                ? \"filters-item active\"\n                                : \"filters-item\";\n                        return (\n                            <li\n                                className={filterClass}\n                                key={index}\n                                onClick={() => {\n                                    dispatch(setFilter(elem));\n                                }}\n                            >\n                                {elem}\n                            </li>\n                        );\n                    })}\n                    <li className=\"filters-item\">\n                        <div\n                            className=\"arrow-up\"\n                            onClick={() => {\n                                dispatch(setOrder(\"asc\"));\n                            }}\n                        ></div>\n                    </li>\n                    <li className=\"filters-item\">\n                        <div\n                            className=\"arrow-down\"\n                            onClick={() => {\n                                dispatch(setOrder(\"desc\"));\n                            }}\n                        ></div>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"app-questions-section\">\n                {content}\n                {loadingHandler}\n                {errorHandler}\n            </div>\n        </div>\n    );\n};\nAppQuestionsList.propTypes = {\n    history: PropTypes.object,\n    match: PropTypes.object,\n};\nexport default withRouter(AppQuestionsList);\n","import AppComment from \"./App-comment\";\nexport default AppComment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nlet AppComment = (props) => {\n    let { comments } = props;\n    return (\n        <div className=\"question-page__comments\">\n            {comments.map((elem, index) => {\n                return (\n                    <div className=\"question-page__comment\" key={index}>\n                        <div className=\"question-page__comment-description\">\n                            {elem.body} -{\" \"}\n                            <Link to={`user/${elem.user_id}`}>\n                                <span className=\"comment-owner\">\n                                    {elem.owner_display_name}{\" \"}\n                                </span>\n                            </Link>\n                            <span className=\"comment-date\">\n                                {\" \"}\n                                {elem.creation_date}\n                            </span>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nAppComment.propTypes = {\n    comments: PropTypes.array,\n};\nexport default AppComment;\n","import AppQuestionComments from \"./App-question-comments\";\n\nexport default AppQuestionComments;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCommentsForQuestionById } from \"../../App-services\";\nimport AppComment from \"../App-comment\";\nlet AppQuestionComments = (props) => {\n    let { id } = props;\n    let dispatch = useDispatch();\n    let comments = useSelector((state) => {\n        return state.questionCommentsReducer.comments;\n    });\n    useEffect(() => {\n        dispatch(getCommentsForQuestionById(id));\n    }, [id]);\n    return <AppComment comments={comments} />;\n};\n\nAppQuestionComments.propTypes = {\n    id: PropTypes.string,\n};\n\nexport default AppQuestionComments;\n","import AppQuestion from \"./App-question\";\nexport default AppQuestion;\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AppQuestionComments from \"../App-question-comments\";\nimport { getQuestionById } from \"../../App-services\";\nlet AppQuestion = (props) => {\n    let { question, id } = props;\n    let dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getQuestionById(id));\n    }, [id]);\n\n    return (\n        <div className=\"question-page__question\">\n            <div className=\"question-header\">\n                <div className=\"question-title\">\n                    <h2>{question.title}</h2>\n                </div>\n                <div className=\"question-stats\">\n                    <div className=\"question-stats__created\">\n                        <span>Asked </span>\n                        {question.creation_date}\n                    </div>\n                    <div className=\"question-stats__active\">\n                        <span>Active </span>\n                        {question.last_activity_date}\n                    </div>\n                    <div className=\"question-stats__viewed\">\n                        <span>Viewed </span>\n                        {question.view_count}\n                        <span> times</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"question-page__question-section\">\n                <div className=\"question-page__section-vote\">\n                    <div className=\"question-page__section-upvote arrow-up\"></div>\n                    <div className=\"question-page__section-score \">\n                        {question.score}\n                    </div>\n                    <div className=\"question-page__section-downvote arrow-down\"></div>\n                </div>\n                <div\n                    className=\"question-page__section-description\"\n                    dangerouslySetInnerHTML={{ __html: question.body }}\n                ></div>\n                <div className=\"question-page__section-footer\">\n                    <div className=\"app-question__tags\">\n                        {question.tags?.map((elem, index) => {\n                            return (\n                                <div key={index} className=\"item-tag\">\n                                    {elem}\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <div className=\"question-page__user\">\n                        <Link to={`/user/${question.user_id}`}>\n                            <div className=\"question-page__user-img\">\n                                <img src={question.user_profile_image}></img>\n                            </div>\n                        </Link>\n                        <div className=\"question-page__user-info\">\n                            <Link to={`/user/${question.user_id}`}>\n                                <div className=\"question-page__user-name\">\n                                    {question.user_profile_name}\n                                </div>\n                            </Link>\n                            <div\n                                className=\"question-page__user-reputation\"\n                                title=\"reputation score\"\n                            >\n                                {question.owner_reputation}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <AppQuestionComments id={id} />\n        </div>\n    );\n};\nAppQuestion.propTypes = {\n    question: PropTypes.object,\n    id: PropTypes.string,\n};\nconst mapStateToProps = (state) => {\n    let {\n        questionReducer: { question },\n    } = state;\n    return {\n        question: question,\n    };\n};\nexport default connect(mapStateToProps)(AppQuestion);\n","import AppAnswersComments from \"./App-answers-comments\";\nexport default AppAnswersComments;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getCommentsForAnswersById } from \"../../App-services\";\nimport AppComment from \"../App-comment\";\n\nlet AppAnswersComments = (props) => {\n    let { id } = props;\n    let dispatch = useDispatch();\n    let comments = useSelector((state) => {\n        return state.answersCommentsReducer.comments;\n    });\n    useEffect(() => {\n        dispatch(getCommentsForAnswersById(id));\n    }, [id]);\n    return <AppComment comments={comments} />;\n};\nAppAnswersComments.propTypes = {\n    id: PropTypes.string,\n};\n\nexport default AppAnswersComments;\n","import AppAnswers from \"./App-answers\";\nexport default AppAnswers;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport AppAnswersComments from \"../App-answers-comments\";\nimport { getAnswersById } from \"../../App-services\";\nimport PropTypes from \"prop-types\";\nimport { setAnswersActiveFilter } from \"../../App-store/reducers/answers-reducer\";\nlet AppAnswers = (props) => {\n    let { answersList, answersFilters, id, answersActiveFilter } = props;\n    let dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getAnswersById([id, answersActiveFilter]));\n    }, [id, answersActiveFilter]);\n    let answers = answersList.map((elem, index) => {\n        let acceptedAnswer = elem.is_accepted ? (\n            <div className=\"question-page___section-isanswered\"></div>\n        ) : null;\n        return (\n            <div className=\"answer-item\" key={index}>\n                <div className=\"question-page__section-vote\">\n                    <div className=\"question-page__section-upvote arrow-up\"></div>\n                    <div className=\"question-page__section-score \">\n                        {elem.score}\n                    </div>\n                    <div className=\"question-page__section-downvote arrow-down\"></div>\n                    {acceptedAnswer}\n                </div>\n                <div\n                    className=\"answer-item__section-description\"\n                    dangerouslySetInnerHTML={{ __html: elem.body }}\n                ></div>\n                <div className=\"question-page__user\">\n                    <Link to={`user/${elem.user_id}`}>\n                        <div className=\"question-page__user-img\">\n                            <img src={elem.user_profile_image}></img>\n                        </div>\n                    </Link>\n                    <div className=\"question-page__user-info\">\n                        <Link to={`user/${elem.user_id}`}>\n                            <div className=\"app-question__user-name\">\n                                {elem.user_profile_name}\n                            </div>\n                        </Link>\n                        <div className=\"question-page__user-reputation\">\n                            {elem.owner_reputation}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    });\n    return (\n        <div className=\"question-page__answers\">\n            <div className=\"question-page__answers-stats\">\n                <div className=\"question-page__answers-counter\">\n                    {answersList.length} Answers\n                </div>\n                <div className=\"question-page__answers-filters\">\n                    {answersFilters.map((elem, index) => {\n                        let filterClass =\n                            elem === answersActiveFilter\n                                ? \"filters-item active\"\n                                : \"filters-item\";\n                        return (\n                            <div\n                                className={filterClass}\n                                key={index}\n                                onClick={() => {\n                                    dispatch(setAnswersActiveFilter(elem));\n                                }}\n                            >\n                                {elem}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n            <div className=\"question-page__answers-section\">{answers}</div>\n            <AppAnswersComments id={id} />\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    let {\n        answersReducer: { answersById, answersFilters, answersActiveFilter },\n    } = state;\n    return {\n        answersList: answersById,\n        answersFilters: answersFilters,\n        answersActiveFilter: answersActiveFilter,\n    };\n};\nAppAnswers.propTypes = {\n    answersList: PropTypes.array,\n    answersFilters: PropTypes.array,\n    id: PropTypes.string,\n    answersActiveFilter: PropTypes.string,\n};\nexport default connect(mapStateToProps)(AppAnswers);\n","import AppQuestionPage from \"./App-question-page\";\nexport default AppQuestionPage;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport AppQuestion from \"../App-question\";\nimport AppAnswers from \"../App-answers\";\n\nlet AppQuestionPage = () => {\n    let match = useRouteMatch();\n    return (\n        <div className=\"question-page\">\n            <AppQuestion id={match.params.id} />\n            <AppAnswers id={match.params.id} />\n        </div>\n    );\n};\nexport default AppQuestionPage;\n","import AppNavigation from \"./App-navigation\";\nexport default AppNavigation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst AppNavigation = () => {\n    return (\n        <div className=\"app-navigation\">\n            <div className=\"app-navigation__wrapper\">\n                <div className=\"app-navigation__item\">\n                    <Link to=\"/\">Home</Link>\n                </div>\n                <div className=\"app-navigation__item\">\n                    <Link to=\"/tags\">Tags</Link>\n                </div>\n                <div className=\"app-navigation__item\">\n                    <Link to=\"/users\">Users</Link>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default AppNavigation;\n","import AppUsersPage from \"./App-users-page\";\nexport default AppUsersPage;\n","import React from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAllUsers } from \"../../App-services\";\nimport {\n    setUsersPageFilter,\n    setUsersPageOrder,\n} from \"../../App-store/reducers\";\nimport AppLoadingPage from \"../App-loading-page\";\nimport AppErrorPage from \"../App-error-page\";\n\nlet AppUsersPage = () => {\n    let [inputValue, getInputValue] = useState(null);\n    let dispatch = useDispatch();\n    let users = useSelector((state) => {\n        let {\n            usersReducer: { users },\n        } = state;\n        if (!inputValue) {\n            return users;\n        }\n        return users.filter((elem) => {\n            if (\n                elem.display_name\n                    .toLowerCase()\n                    .indexOf(inputValue.toLowerCase()) > -1\n            ) {\n                return elem;\n            }\n        });\n    }, shallowEqual);\n    let data = useSelector((state) => {\n        let {\n            usersReducer: { activeFilter, filters, order, loading },\n        } = state;\n        return { activeFilter, filters, order, loading };\n    }, shallowEqual);\n    let { activeFilter, order, filters, loading } = data;\n    useEffect(() => {\n        dispatch(getAllUsers([order, activeFilter]));\n    }, [activeFilter, order]);\n    let loadingHandler = loading === \"loading\" ? <AppLoadingPage /> : null;\n    let errorHandler = loading === \"failed\" ? <AppErrorPage /> : null;\n    let hasData = !(loadingHandler || errorHandler);\n    let usersItem = users.map((elem, index) => {\n        return (\n            <div className=\"app-users__item\" key={index}>\n                <div className=\"app-users__item-wrapper\">\n                    <div className=\"app-user__img\">\n                        <Link to={`user/${elem.user_id}`}>\n                            <img src={elem.profile_image}></img>\n                        </Link>\n                    </div>\n                    <div className=\"app-users__description\">\n                        <div className=\"app-users__name\">\n                            <Link to={`user/${elem.user_id}`}>\n                                {elem.display_name}\n                            </Link>\n                        </div>\n                        <div className=\"app-user__location\">\n                            {elem.location}\n                        </div>\n                        <div\n                            className=\"app-user__reputation\"\n                            title=\"reputation\"\n                        >\n                            {elem.reputation}\n                        </div>\n                        <div\n                            className=\"app-user__about-me\"\n                            dangerouslySetInnerHTML={{ __html: elem.about_me }}\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        );\n    });\n    let content = hasData ? usersItem : null;\n    return (\n        <div className=\"app-users__section page-section\">\n            <div className=\"app-users__section-header\">\n                <h2>Users</h2>\n            </div>\n            <div className=\"app-users__section-filters\">\n                <div className=\"app-users__input\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Filter by user\"\n                        onChange={(e) => getInputValue(e.target.value)}\n                    ></input>\n                </div>\n                <div className=\"app-users__filters-wrapper\">\n                    <ul className=\"app-users__filters\">\n                        {filters.map((elem, index) => {\n                            let filterClass =\n                                activeFilter === elem\n                                    ? \"filters-item active\"\n                                    : \"filters-item\";\n                            return (\n                                <li\n                                    className={filterClass}\n                                    key={index}\n                                    onClick={() => {\n                                        dispatch(setUsersPageFilter(elem));\n                                    }}\n                                >\n                                    {elem}\n                                </li>\n                            );\n                        })}\n                        <li className=\"filters-item\">\n                            <div\n                                className=\"arrow-up\"\n                                onClick={() => {\n                                    dispatch(setUsersPageOrder(\"asc\"));\n                                }}\n                            ></div>\n                        </li>\n                        <li className=\"filters-item\">\n                            <div\n                                className=\"arrow-down\"\n                                onClick={() => {\n                                    dispatch(setUsersPageOrder(\"desc\"));\n                                }}\n                            ></div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"app-users__list\">\n                {loadingHandler} {errorHandler} {content}\n            </div>\n        </div>\n    );\n};\nexport default AppUsersPage;\n","import AppTagsPage from \"./App-tags-page\";\nexport default AppTagsPage;\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { setTagPageFilter } from \"../../App-store/reducers\";\nimport { getAllTags } from \"../../App-services\";\nimport AppLoadingPage from \"../App-loading-page\";\nimport AppErrorPage from \"../App-error-page\";\nlet AppTagsPage = (props) => {\n    let [inputValue, setInputValue] = useState(\"\");\n    let dispatch = useDispatch();\n    let {\n        activeFilter,\n        tagsPageFilters,\n        tagsData,\n        loading,\n        setTagPageFilter,\n    } = props;\n    useEffect(() => {\n        dispatch(getAllTags(activeFilter));\n    }, [activeFilter]);\n    let tags = tagsData.filter((elem) => {\n        if (!inputValue) {\n            return elem;\n        }\n        if (elem.name.indexOf(inputValue) > -1) {\n            return elem;\n        }\n    }, []);\n    let loadingHandler = loading === \"loading\" ? <AppLoadingPage /> : null;\n    let errorHandler = loading === \"failed\" ? <AppErrorPage /> : null;\n    let hasData = !(loadingHandler || errorHandler);\n    let dataTags = tags.map((elem, index) => {\n        return (\n            <li className=\"tag-item\" key={index}>\n                <div className=\"tag-title\">\n                    <Link to={`/questions/tag/${elem.name}`}>{elem.name}</Link>\n                </div>\n                <div className=\"tag-description\">\n                    You can find additional information by {elem.name} tag\n                </div>\n                <div className=\"tag-stats\">\n                    <div className=\"tag-stats__count\">\n                        {elem.count} questions\n                    </div>\n                </div>\n            </li>\n        );\n    });\n    let content = hasData ? dataTags : null;\n    return (\n        <div className=\"app-tags__section page-section\">\n            <div className=\"app-tags__section-header\">\n                <h2>Tags</h2>\n            </div>\n            <div className=\"app-tags__section-description\">\n                A tag is a keyword or label that categorizes your question with\n                other, similar questions. Using the right tags makes it easier\n                for others to find and answer your question.\n            </div>\n            <div className=\"app-tags__section-filters\">\n                <div className=\"app-tags__input\">\n                    {\" \"}\n                    <input\n                        type=\"text\"\n                        placeholder=\"Filter by tag name\"\n                        value={inputValue}\n                        onChange={(e) => {\n                            setInputValue(e.target.value);\n                        }}\n                    ></input>\n                </div>\n                <div className=\"app-tags__filters\">\n                    <ul>\n                        {tagsPageFilters.map((elem, index) => {\n                            let filterClass =\n                                elem === activeFilter\n                                    ? \"filters-item active\"\n                                    : \"filters-item\";\n                            return (\n                                <li\n                                    className={filterClass}\n                                    key={index}\n                                    onClick={() => {\n                                        setTagPageFilter(elem);\n                                    }}\n                                >\n                                    {elem}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"app-tags__section-items\">\n                {content}\n                {loadingHandler}\n                {errorHandler}\n            </div>\n        </div>\n    );\n};\nAppTagsPage.propTypes = {\n    tagsData: PropTypes.array,\n    activeFilter: PropTypes.string,\n    tagsPageFilters: PropTypes.array,\n    loading: PropTypes.string,\n    tagWiki: PropTypes.array,\n    setTagPageFilter: PropTypes.func,\n};\nconst mapStateToProps = (state) => {\n    let {\n        tagsReducer: { tags, activeFilter, tagsPageFilters, loading },\n    } = state;\n    return {\n        tagsData: tags,\n        activeFilter: activeFilter,\n        tagsPageFilters: tagsPageFilters,\n        loading: loading,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setTagPageFilter: (value) => {\n            dispatch(setTagPageFilter(value));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AppTagsPage);\n","import AppUserPageInfoDetails from \"./App-user-page-info-details\";\nexport default AppUserPageInfoDetails;\n","import React from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getUserById } from \"../../App-services\";\nlet AppUserPageInfoDetails = (props) => {\n    let { id } = props;\n    let dispatch = useDispatch();\n\n    let data = useSelector((state) => {\n        let {\n            userReducer: { user },\n        } = state;\n        return { user };\n    }, shallowEqual);\n    let { user } = data;\n    useEffect(() => {\n        dispatch(getUserById(id));\n    }, [id]);\n    return (\n        <div className=\"app-user__information\">\n            <div className=\"app-user__information-logo\">\n                <div className=\"app-user__img\">\n                    <img src={user.profile_image}></img>\n                </div>\n                <div className=\"app-user__reputation\">\n                    {user.reputation}{\" \"}\n                    <span className=\"app-user__fontstyle\">REPUTATION</span>\n                </div>\n                <div className=\"app-user__badges\">\n                    <div className=\"app-user__badges-gold\">\n                        {user.badge_counts_gold}\n                    </div>\n                    <div className=\"app-user__badges-silver\">\n                        {user.badge_counts_silver}\n                    </div>\n                    <div className=\"app-user__badges-bronze\">\n                        {user.badge_counts_bronze}\n                    </div>\n                </div>\n            </div>\n            <div className=\"app-user__information-about\">\n                <div className=\"app-user__name\">\n                    <h2>{user.display_name}</h2>\n                </div>\n                <div\n                    className=\"app-user__about\"\n                    dangerouslySetInnerHTML={{ __html: user.about_me }}\n                ></div>\n            </div>\n            <div className=\"app-user__information-account\">\n                <div className=\"app-user__account-stats\">\n                    <div className=\"app-user__answered\">\n                        <div>{user.answer_count}</div>\n                        <span className=\"app-user__fontstyle\">answers</span>\n                    </div>\n                    <div className=\"app-user__questions\">\n                        <div>{user.question_count}</div>\n                        <span className=\"app-user__fontstyle\">questions</span>\n                    </div>\n                </div>\n                <div className=\"app-user__location\">{user.location}</div>\n                <div className=\"app-user__account-created\">\n                    Member from{\" \"}\n                    <span className=\"app-user__fontstyle\">\n                        {user.creation_date}\n                    </span>\n                </div>\n                <div className=\"app-user__last-activity\">\n                    Last seen{\" \"}\n                    <span className=\"app-user__fontstyle\">\n                        {user.last_access_date}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\nAppUserPageInfoDetails.propTypes = {\n    id: PropTypes.string,\n};\nexport default AppUserPageInfoDetails;\n","import AppUserPageTagsDetails from \"./App-user-page-tags-details\";\nexport default AppUserPageTagsDetails;\n","import React from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getUserTopTags } from \"../../App-services\";\nlet AppUserPageTagsDetails = (props) => {\n    let { id } = props;\n    let dispatch = useDispatch();\n    let data = useSelector((state) => {\n        let {\n            userReducer: { tags },\n        } = state;\n        return { tags };\n    }, shallowEqual);\n    useEffect(() => {\n        dispatch(getUserTopTags(id));\n    }, [id]);\n    let { tags } = data;\n    return (\n        <div className=\"app-user__top-tags\">\n            <div className=\"app-user__tags-header\">\n                <h2>Top Tags</h2>\n            </div>\n            <div className=\"app-user__tags-wrapper\">\n                <ul className=\"app-user__tags-list\">\n                    {tags.map((elem, index) => {\n                        return (\n                            <li className=\"app-user__tags-item\" key={index}>\n                                <div>\n                                    <div className=\"tag-title\">\n                                        <Link\n                                            to={`/questions/tag/${elem.tag_name}`}\n                                        >\n                                            {elem.tag_name}\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"tag-stats\">\n                                    <div className=\"tag-stats__score\">\n                                        <span className=\"app-user__fontstyle\">\n                                            SCORE\n                                        </span>{\" \"}\n                                        {elem.answer_score}\n                                    </div>\n                                    <div className=\"tag-stats__posts\">\n                                        <span className=\"app-user__fontstyle\">\n                                            POSTS\n                                        </span>{\" \"}\n                                        {elem.answer_count}\n                                    </div>\n                                </div>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n};\nAppUserPageTagsDetails.propTypes = {\n    id: PropTypes.string,\n};\nexport default AppUserPageTagsDetails;\n","import AppUserPagePostsDetails from \"./App-user-page-posts-details\";\nexport default AppUserPagePostsDetails;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { useEffect, useMemo } from \"react\";\nimport {\n    getUserQuestionsById,\n    getUserAnswersById,\n    getUserPostsById,\n} from \"../../App-services\";\nimport { setFilter, setSortListItem } from \"../../App-store/reducers\";\nlet AppUserPagePostsDetails = (props) => {\n    let { id } = props;\n    let dispatch = useDispatch();\n    let data = useSelector((state) => {\n        let {\n            userReducer: {\n                posts,\n                activeFilter,\n                filters,\n                sortList,\n                sortListItem,\n            },\n        } = state;\n        return {\n            posts,\n            activeFilter,\n            filters,\n            sortList,\n            sortListItem,\n        };\n    }, shallowEqual);\n    let { posts, activeFilter, filters, sortList, sortListItem } = data;\n    let dataForRequest = useMemo(\n        () => ({\n            id,\n            activeFilter,\n        }),\n        [id, activeFilter]\n    );\n    useEffect(() => {\n        switch (sortListItem) {\n            case \"All\":\n                dispatch(getUserPostsById(dataForRequest));\n                break;\n            case \"Questions\":\n                dispatch(getUserQuestionsById(dataForRequest));\n                break;\n            case \"Answers\":\n                dispatch(getUserAnswersById(dataForRequest));\n                break;\n        }\n    }, [dataForRequest, sortListItem]);\n    return (\n        <div className=\"app-user__posts\">\n            <div className=\"app-user__posts-filter\">\n                <div className=\"app-user__posts-title\">\n                    <h2>Newest {sortListItem}</h2>\n                </div>\n                <div className=\"app-user__posts-filter-items\">\n                    <ul>\n                        {sortList.map((elem, index) => {\n                            let filterClass =\n                                elem === sortListItem\n                                    ? \"filters-item active\"\n                                    : \"filters-item\";\n                            return (\n                                <li\n                                    className={filterClass}\n                                    key={index}\n                                    onClick={() => {\n                                        dispatch(setSortListItem(elem));\n                                    }}\n                                >\n                                    {elem}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    <ul>\n                        {filters.map((elem, index) => {\n                            let filterClass =\n                                elem === activeFilter\n                                    ? \"filters-item active\"\n                                    : \"filters-item\";\n                            return (\n                                <li\n                                    className={filterClass}\n                                    key={index}\n                                    onClick={() => {\n                                        dispatch(setFilter(elem));\n                                    }}\n                                >\n                                    {elem}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"app-user__posts-list-wrapper\">\n                <ul className=\"app-user__posts-list\">\n                    {posts.map((elem, index) => {\n                        let elemClass = elem.is_answered\n                            ? \"posts-item__score answered\"\n                            : \"posts-item__score\";\n                        return (\n                            <li key={index} className=\"posts-item\">\n                                <div className={elemClass}>{elem.score}</div>\n                                <div className=\"posts-item__title\">\n                                    {elem.title}\n                                </div>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n};\nAppUserPagePostsDetails.propTypes = {\n    id: PropTypes.string,\n};\nexport default AppUserPagePostsDetails;\n","import AppUserPage from \"./App-user-page\";\nexport default AppUserPage;\n","import React from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport AppUserPageInfoDetails from \"../App-user-page-info-details\";\nimport AppUserPageTagsDetails from \"../App-user-page-tags-details\";\nimport AppUserPagePostsDetails from \"../App-user-page-posts-details\";\n\nlet AppUserPage = () => {\n    let match = useRouteMatch();\n    let { id } = match.params;\n    return (\n        <div className=\"app-user__section page-section\">\n            <AppUserPageInfoDetails id={id} />\n            <AppUserPageTagsDetails id={id} />\n            <AppUserPagePostsDetails id={id} />\n        </div>\n    );\n};\nexport default AppUserPage;\n","import AppPage from \"./App-page\";\nexport default AppPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AppQuestionsList from \"../App-questions-list\";\nimport AppQuestionPage from \"../App-question-page\";\nimport AppNavigation from \"../App-navigation\";\nimport AppUsersPage from \"../App-users-page\";\nimport AppTagsPage from \"../App-tags-page\";\nimport AppUserPage from \"../App-user-page\";\nconst AppPage = () => {\n    return (\n        <div className=\"app-section\">\n            <div className=\"container\">\n                <div className=\"app-section__wrapper\">\n                    <AppNavigation />\n                    <Switch>\n                        <Route exact path=\"/\" component={AppQuestionsList} />\n                        <Route\n                            exact\n                            path=\"/questions/tag/:id\"\n                            component={AppQuestionsList}\n                        />\n                        <Route path=\"/users\" component={AppUsersPage} />\n                        <Route path=\"/user/:id\" component={AppUserPage}></Route>\n                        <Route path=\"/tags\" component={AppTagsPage} />\n                        <Route\n                            path=\"/questions/:id\"\n                            component={AppQuestionPage}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default AppPage;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./App.scss\";\n\nimport AppHeader from \"../App-header\";\nimport AppPage from \"../App-page\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div id=\"App\">\n                <AppHeader />\n                <AppPage />\n            </div>\n        </Router>\n    );\n};\nApp.propTypes = {\n    getAllQuestions: PropTypes.func,\n};\nexport default App;\n","import store from \"./store/store\";\nexport default store;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n    tokenReducer,\n    answersReducer,\n    questionsReducer,\n    filterReducer,\n    questionReducer,\n    answersCommentsReducer,\n    questionCommentsReducer,\n    usersReducer,\n    tagsReducer,\n    userReducer,\n} from \"../reducers\";\n\nconst store = configureStore({\n    reducer: {\n        tokenReducer: tokenReducer,\n        answersReducer: answersReducer,\n        questionsReducer: questionsReducer,\n        questionReducer: questionReducer,\n        answersCommentsReducer: answersCommentsReducer,\n        questionCommentsReducer: questionCommentsReducer,\n        filterReducer: filterReducer,\n        usersReducer: usersReducer,\n        tagsReducer: tagsReducer,\n        userReducer: userReducer,\n    },\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport store from \"./App-store\";\nimport { Provider } from \"react-redux\";\nimport { AppRegistrationServicesProvider } from \"./App-Services-Context\";\nimport { AppRegistrationServices } from \"./App-services\";\nconst appLoginServices = new AppRegistrationServices();\nReactDOM.render(\n    <Provider store={store}>\n        <AppRegistrationServicesProvider value={appLoginServices}>\n            <App />\n        </AppRegistrationServicesProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}